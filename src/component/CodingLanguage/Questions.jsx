// questions.js
const Questions = {
    html: [
        { id: 1, text: 'What does HTML stand for?', options: ['Hyper Text Markup Language', 'High Text Markup Language', 'Hyperlink Text Markup Language', 'Hyper Text Markup Level'], answer: 'Hyper Text Markup Language' },
        { id: 2, text: 'Which tag is used for the largest heading in HTML?', options: ['<h1>', '<h6>', '<heading>', '<h5>'], answer: '<h1>' },
        { id: 3, text: 'What is the correct HTML element for inserting a line break?', options: ['<break>', '<br>', '<lb>', '<linebreak>'], answer: '<br>' },
        { id: 4, text: 'What is the purpose of the <head> tag?', options: ['Contains metadata', 'Displays the main content', 'Defines a header', 'Adds a footer'], answer: 'Contains metadata' },
        { id: 5, text: 'Which attribute is used to specify the URL of an image in HTML?', options: ['src', 'href', 'url', 'link'], answer: 'src' },
        { id: 6, text: 'How do you create a hyperlink in HTML?', options: ['<a href="url">link</a>', '<link href="url">link</link>', '<hyperlink href="url">link</hyperlink>', '<a url="url">link</a>'], answer: '<a href="url">link</a>' },
        { id: 7, text: 'What is the correct HTML for making a checkbox?', options: ['<input type="checkbox">', '<checkbox>', '<input type="check">', '<check>'], answer: '<input type="checkbox">' },
        { id: 8, text: 'Which element is used to define an unordered list?', options: ['<ul>', '<ol>', '<li>', '<list>'], answer: '<ul>' },
        { id: 9, text: 'Which HTML element is used to specify a footer for a document or section?', options: ['<footer>', '<bottom>', '<section>', '<aside>'], answer: '<footer>' },
        { id: 10, text: 'What does the <meta> tag in HTML do?', options: ['Specifies metadata', 'Links to CSS', 'Defines the title', 'Adds JavaScript'], answer: 'Specifies metadata' },
        { id: 11, text: 'Which element is used to define a table in HTML?', options: ['<table>', '<tab>', '<tbody>', '<tr>'], answer: '<table>' },
        { id: 12, text: 'What is the purpose of the <title> tag?', options: ['Defines the title of the document', 'Specifies the main heading', 'Creates a link', 'Defines a subheading'], answer: 'Defines the title of the document' },
        { id: 13, text: 'Which HTML tag is used to create a dropdown list?', options: ['<select>', '<dropdown>', '<list>', '<option>'], answer: '<select>' },
        { id: 14, text: 'What is the correct HTML element for playing audio files?', options: ['<audio>', '<sound>', '<music>', '<play>'], answer: '<audio>' },
        { id: 15, text: 'What is the purpose of the <script> tag?', options: ['Defines a client-side script', 'Links to a CSS file', 'Defines an image', 'Specifies metadata'], answer: 'Defines a client-side script' },
        { id: 16, text: 'Which attribute can be used to open a link in a new tab?', options: ['target="_blank"', 'link="_new"', 'open="_new"', 'href="_new"'], answer: 'target="_blank"' },
        { id: 17, text: 'What does the <form> tag do in HTML?', options: ['Defines an HTML form for user input', 'Links to an external document', 'Creates a dropdown', 'Defines a section'], answer: 'Defines an HTML form for user input' },
        { id: 18, text: 'Which HTML element defines navigation links?', options: ['<nav>', '<links>', '<navigate>', '<menu>'], answer: '<nav>' },
        { id: 19, text: 'How do you create a text area in HTML?', options: ['<textarea>', '<text>', '<area>', '<input type="text">'], answer: '<textarea>' },
        { id: 20, text: 'Which element is used to define an option in a dropdown list?', options: ['<option>', '<select>', '<dropdown>', '<choice>'], answer: '<option>' },
        { id: 21, text: 'What is the default value of the type attribute for <input>?', options: ['text', 'password', 'checkbox', 'radio'], answer: 'text' },
        { id: 22, text: 'What is the purpose of the <iframe> tag?', options: ['Defines an inline frame', 'Links to another page', 'Creates a header', 'Defines a footer'], answer: 'Defines an inline frame' },
        { id: 23, text: 'Which attribute is used to specify the character encoding for the HTML document?', options: ['charset', 'encoding', 'type', 'meta'], answer: 'charset' },
        { id: 24, text: 'What does the <link> tag in HTML do?', options: ['Links to external resources', 'Defines a heading', 'Creates a dropdown', 'Specifies a script'], answer: 'Links to external resources' },
        { id: 25, text: 'How can you make a numbered list in HTML?', options: ['<ol>', '<ul>', '<list>', '<li>'], answer: '<ol>' },
        { id: 26, text: 'What is the use of the <canvas> element?', options: ['To draw graphics', 'To display video', 'To create tables', 'To define metadata'], answer: 'To draw graphics' },
        { id: 27, text: 'Which tag is used to define a section in an HTML document?', options: ['<section>', '<div>', '<part>', '<segment>'], answer: '<section>' },
        { id: 28, text: 'What is the correct HTML for a clickable button?', options: ['<button>', '<click>', '<input type="button">', '<input button="true">'], answer: '<button>' },
        { id: 29, text: 'Which HTML element is used to embed an external video file?', options: ['<video>', '<media>', '<source>', '<embed>'], answer: '<video>' },
        { id: 30, text: 'What is the purpose of the <style> tag in HTML?', options: ['Defines CSS styles', 'Links to external resources', 'Defines a script', 'Creates a header'], answer: 'Defines CSS styles' },
    ],
    css: [
        { id: 1, text: 'What does CSS stand for?', options: ['Cascading Style Sheets', 'Creative Style System', 'Colorful Style Sheets', 'Cascading Style Syntax'], answer: 'Cascading Style Sheets' },
        { id: 2, text: 'Which property is used to change the background color?', options: ['bgcolor', 'background-color', 'color', 'background'], answer: 'background-color' },
        { id: 3, text: 'What is the correct CSS syntax to select an element with id "header"?', options: ['#header { }', '.header { }', 'header { }', '*header { }'], answer: '#header { }' },
        { id: 4, text: 'How do you apply a style to all <p> elements in CSS?', options: ['p { }', 'p.all { }', 'all.p { }', 'p.all { color: red; }'], answer: 'p { }' },
        { id: 5, text: 'Which property controls the text size in CSS?', options: ['text-size', 'font-size', 'text-style', 'size'], answer: 'font-size' },
        { id: 6, text: 'How do you center a block element in CSS?', options: ['margin: auto;', 'text-align: center;', 'align: center;', 'center: true;'], answer: 'margin: auto;' },
        { id: 7, text: 'What is the correct CSS syntax for a border?', options: ['border: solid;', 'border: 1px solid black;', 'border-style: solid;', 'border-color: black;'], answer: 'border: 1px solid black;' },
        { id: 8, text: 'Which CSS property is used to change the font of an element?', options: ['font-weight', 'font-style', 'font-family', 'text-font'], answer: 'font-family' },
        { id: 9, text: 'How do you create a flexbox container in CSS?', options: ['display: flex;', 'flex: true;', 'display: box;', 'box: flex;'], answer: 'display: flex;' },
        { id: 10, text: 'What does the float property do?', options: ['Floats an element to the left or right', 'Centers an element', 'Changes the size of an element', 'Hides an element'], answer: 'Floats an element to the left or right' },
        { id: 11, text: 'What is the purpose of the z-index property?', options: ['Defines the stack order of elements', 'Sets the width of an element', 'Changes the color', 'Sets the opacity'], answer: 'Defines the stack order of elements' },
        { id: 12, text: 'Which selector selects all elements of a specific type?', options: ['tagname', 'tagname{}', 'tagname[]', '*tagname'], answer: 'tagname' },
        { id: 13, text: 'What is the default value of the position property?', options: ['static', 'relative', 'absolute', 'fixed'], answer: 'static' },
        { id: 14, text: 'How do you make a list horizontal in CSS?', options: ['list-style-type: none;', 'display: inline;', 'float: left;', 'all of the above'], answer: 'all of the above' },
        { id: 15, text: 'Which CSS property is used to set the spacing between elements?', options: ['padding', 'margin', 'spacing', 'border-spacing'], answer: 'margin' },
        { id: 16, text: 'How can you add a comment in a CSS file?', options: ['// comment', '<!-- comment -->', '/* comment */', '# comment'], answer: '/* comment */' },
        { id: 17, text: 'What is the correct CSS syntax to change the text color of all <h1> elements?', options: ['h1 { color: red; }', 'h1.color = "red";', 'h1 { text-color: red; }', 'color: h1 { red; }'], answer: 'h1 { color: red; }' },
        { id: 18, text: 'What does the display property do?', options: ['Defines how an element is displayed', 'Sets the width of an element', 'Changes the background color', 'Changes the height'], answer: 'Defines how an element is displayed' },
        { id: 19, text: 'Which property is used to create space inside an element?', options: ['margin', 'padding', 'spacing', 'border'], answer: 'padding' },
        { id: 20, text: 'How do you hide an element in CSS?', options: ['visibility: hidden;', 'display: none;', 'opacity: 0;', 'all of the above'], answer: 'all of the above' },
        { id: 21, text: 'What is the use of the box-shadow property?', options: ['Adds shadow effects to elements', 'Changes the border color', 'Creates a gradient', 'Sets opacity'], answer: 'Adds shadow effects to elements' },
        { id: 22, text: 'What does the opacity property do?', options: ['Sets the transparency of an element', 'Changes the color', 'Defines the border', 'Sets the font size'], answer: 'Sets the transparency of an element' },
        { id: 23, text: 'How do you create a CSS grid layout?', options: ['display: grid;', 'grid-layout: true;', 'display: block;', 'grid: layout;'], answer: 'display: grid;' },
        { id: 24, text: 'What is the purpose of the transition property?', options: ['Creates smooth transitions between properties', 'Changes color', 'Defines animation', 'Changes the size'], answer: 'Creates smooth transitions between properties' },
        { id: 25, text: 'Which property controls the layout of an element?', options: ['layout', 'display', 'position', 'visibility'], answer: 'display' },
        { id: 26, text: 'What is the correct syntax to set a background image in CSS?', options: ['background-image: url("image.jpg");', 'background: image("image.jpg");', 'image: url("image.jpg");', 'background-image: "image.jpg";'], answer: 'background-image: url("image.jpg");' },
        { id: 27, text: 'Which CSS property is used to specify the font size?', options: ['font-size', 'text-size', 'size', 'text-font-size'], answer: 'font-size' },
        { id: 28, text: 'What is the purpose of the overflow property?', options: ['Specifies what happens if content overflows an element', 'Defines the border', 'Sets padding', 'Changes the height'], answer: 'Specifies what happens if content overflows an element' },
        { id: 29, text: 'Which property is used to create rounded corners?', options: ['border-radius', 'border-corner', 'corner-radius', 'border-round'], answer: 'border-radius' },
        { id: 30, text: 'How do you set the width of an element in CSS?', options: ['width: 100%;', 'set-width: 100%;', 'element-width: 100%;', 'size: 100%;'], answer: 'width: 100%;' },
    ],
    javascript: [
        { id: 1, text: 'What does JS stand for?', options: ['JavaScript', 'JavaSource', 'JavaStyle', 'JustScript'], answer: 'JavaScript' },
        { id: 2, text: 'Which of the following is a JavaScript data type?', options: ['String', 'Number', 'Boolean', 'All of the above'], answer: 'All of the above' },
        { id: 3, text: 'What is the correct way to declare a JavaScript variable?', options: ['var x = 5;', 'variable x = 5;', 'declare x = 5;', 'x = 5;'], answer: 'var x = 5;' },
        { id: 4, text: 'Which symbol is used for comments in JavaScript?', options: ['//', '#', '/*', '<!--'], answer: '//' },
        { id: 5, text: 'How do you create a function in JavaScript?', options: ['function myFunction()', 'create myFunction()', 'function: myFunction()', 'def myFunction()'], answer: 'function myFunction()' },
        { id: 6, text: 'What is the output of 2 + 2 in JavaScript?', options: ['4', '"4"', '2 + 2', 'undefined'], answer: '4' },
        { id: 7, text: 'Which of the following is a loop structure in JavaScript?', options: ['for', 'while', 'do...while', 'All of the above'], answer: 'All of the above' },
        { id: 8, text: 'What does the console.log() function do?', options: ['Prints to the console', 'Creates a log file', 'Outputs to the screen', 'None of the above'], answer: 'Prints to the console' },
        { id: 9, text: 'How do you write "Hello World" in an alert box?', options: ['alert("Hello World");', 'msg("Hello World");', 'alertBox("Hello World");', 'echo("Hello World");'], answer: 'alert("Hello World");' },
        { id: 10, text: 'What is the purpose of the parseInt() function?', options: ['Converts a string to an integer', 'Parses a string as a float', 'Converts a string to a number', 'None of the above'], answer: 'Converts a string to an integer' },
        { id: 11, text: 'Which method is used to remove the last element from an array?', options: ['pop()', 'shift()', 'slice()', 'remove()'], answer: 'pop()' },
        { id: 12, text: 'How can you convert a string to an integer in JavaScript?', options: ['parseInt()', 'int()', 'Number()', 'convert()'], answer: 'parseInt()' },
        { id: 13, text: 'What does the length property of an array return?', options: ['The number of elements in the array', 'The last element of the array', 'The first element of the array', 'The total size of the array'], answer: 'The number of elements in the array' },
        { id: 14, text: 'How can you add a comment in JavaScript?', options: ['// comment', '/* comment */', 'Both A and B', '# comment'], answer: 'Both A and B' },
        { id: 15, text: 'Which of the following is used to define a JavaScript object?', options: ['{}', '[]', '()', '<>'], answer: '{}' },
        { id: 16, text: 'Which function is used to parse a JSON string?', options: ['JSON.parse()', 'JSON.stringify()', 'JSON.convert()', 'None of the above'], answer: 'JSON.parse()' },
        { id: 17, text: 'What is the output of the expression typeof NaN?', options: ['number', 'string', 'undefined', 'NaN'], answer: 'number' },
        { id: 18, text: 'What keyword is used to define a constant in JavaScript?', options: ['const', 'let', 'var', 'define'], answer: 'const' },
        { id: 19, text: 'How can you check if a variable is undefined?', options: ['variable === undefined', 'typeof variable === "undefined"', 'Both A and B', 'isUndefined(variable)'], answer: 'Both A and B' },
        { id: 20, text: 'What is the difference between == and ===?', options: ['== checks for value, === checks for type', 'Both are the same', '=== checks for value, == checks for type', '== checks for type, === checks for value'], answer: '== checks for value, === checks for type' },
        { id: 21, text: 'Which method adds one or more elements to the end of an array?', options: ['push()', 'pop()', 'shift()', 'unshift()'], answer: 'push()' },
        { id: 22, text: 'How can you create an array in JavaScript?', options: ['let arr = [];', 'let arr = ();', 'let arr = {};', 'let arr = <>;'], answer: 'let arr = [];' },
        { id: 23, text: 'Which operator is used to assign a value to a variable?', options: ['=', '==', '===', '->'], answer: '=' },
        { id: 24, text: 'What will be the output of "5" + 2?', options: ['52', '7', 'error', 'undefined'], answer: '52' },
        { id: 25, text: 'Which of the following methods can be used to loop through an array?', options: ['forEach()', 'map()', 'filter()', 'All of the above'], answer: 'All of the above' },
        { id: 26, text: 'Which event occurs when the user clicks on an HTML element?', options: ['onclick', 'onchange', 'onmouseover', 'onfocus'], answer: 'onclick' },
        { id: 27, text: 'How do you create a new array from an existing array in JavaScript?', options: ['slice()', 'splice()', 'concat()', 'Both A and C'], answer: 'Both A and C' },
        { id: 28, text: 'What is a promise in JavaScript?', options: ['An object that represents the eventual completion of an asynchronous operation', 'A data type', 'A loop structure', 'None of the above'], answer: 'An object that represents the eventual completion of an asynchronous operation' },
        { id: 29, text: 'Which keyword is used to create a new function?', options: ['function', 'define', 'new', 'method'], answer: 'function' },
        { id: 30, text: 'What does the this keyword refer to in JavaScript?', options: ['The current object', 'The previous object', 'The global object', 'None of the above'], answer: 'The current object' },
    ],
    python: [
        { id: 1, text: 'What does Python stand for?', options: ['A snake', 'A programming language', 'A type of software', 'None of the above'], answer: 'A programming language' },
        { id: 2, text: 'Which symbol is used for comments in Python?', options: ['#', '//', '/*', '<!--'], answer: '#' },
        { id: 3, text: 'What is the correct way to create a function in Python?', options: ['def myFunction():', 'function myFunction():', 'create myFunction():', 'None of the above'], answer: 'def myFunction():' },
        { id: 4, text: 'Which data type is not supported in Python?', options: ['List', 'Dictionary', 'Array', 'Tuple'], answer: 'Array' },
        { id: 5, text: 'What is the output of print(type(1)) in Python?', options: ['int', 'str', 'float', 'None'], answer: 'int' },
        { id: 6, text: 'How do you create a list in Python?', options: ['list = []', 'list = ()', 'list = {}', 'list = <>'], answer: 'list = []' },
        { id: 7, text: 'What is the correct syntax for a while loop in Python?', options: ['while condition:', 'loop while condition:', 'while (condition):', 'None of the above'], answer: 'while condition:' },
        { id: 8, text: 'Which function is used to read input from the user in Python?', options: ['input()', 'get()', 'read()', 'scan()'], answer: 'input()' },
        { id: 9, text: 'What does the len() function do?', options: ['Returns the length of an object', 'Returns the type of an object', 'Counts elements in a list', 'None of the above'], answer: 'Returns the length of an object' },
        { id: 10, text: 'Which keyword is used to define a class in Python?', options: ['class', 'def', 'function', 'method'], answer: 'class' },
        { id: 11, text: 'How do you start a for loop in Python?', options: ['for x in iterable:', 'foreach x in iterable:', 'for each x in iterable:', 'None of the above'], answer: 'for x in iterable:' },
        { id: 12, text: 'What is the correct way to import a module in Python?', options: ['import module', 'import module()', 'from module import', 'include module'], answer: 'import module' },
        { id: 13, text: 'How do you write a conditional statement in Python?', options: ['if condition:', 'condition if:', 'if (condition):', 'None of the above'], answer: 'if condition:' },
        { id: 14, text: 'What is a lambda function in Python?', options: ['An anonymous function', 'A named function', 'A built-in function', 'None of the above'], answer: 'An anonymous function' },
        { id: 15, text: 'Which of the following is a mutable data type in Python?', options: ['List', 'Tuple', 'String', 'None of the above'], answer: 'List' },
        { id: 16, text: 'What does the range() function do?', options: ['Generates a sequence of numbers', 'Returns a random number', 'Counts elements in a list', 'None of the above'], answer: 'Generates a sequence of numbers' },
        { id: 17, text: 'How do you define a global variable in Python?', options: ['global x', 'x = global', 'def global x', 'None of the above'], answer: 'global x' },
        { id: 18, text: 'What is the output of 2 ** 3 in Python?', options: ['8', '9', '6', 'None of the above'], answer: '8' },
        { id: 19, text: 'Which operator is used for floor division in Python?', options: ['//', '%', '/', '^'], answer: '//' },
        { id: 20, text: 'What does the append() method do in Python?', options: ['Adds an item to the end of the list', 'Removes the last item', 'Returns the last item', 'None of the above'], answer: 'Adds an item to the end of the list' },
        { id: 21, text: 'Which statement is used to exit a loop in Python?', options: ['break', 'exit', 'return', 'continue'], answer: 'break' },
        { id: 22, text: 'What is the purpose of the pass statement in Python?', options: ['To do nothing', 'To exit a function', 'To skip an iteration', 'None of the above'], answer: 'To do nothing' },
        { id: 23, text: 'How do you handle exceptions in Python?', options: ['try...except', 'catch...', 'try...catch', 'None of the above'], answer: 'try...except' },
        { id: 24, text: 'Which built-in function can be used to get the absolute value of a number?', options: ['abs()', 'value()', 'absolute()', 'getValue()'], answer: 'abs()' },
        { id: 25, text: 'How do you create a dictionary in Python?', options: ['dict = {}', 'dict = []', 'dict = ()', 'dict = <>'], answer: 'dict = {}' },
        { id: 26, text: 'Which of the following is not a valid variable name in Python?', options: ['myVar', '2ndVar', '_myVar', 'my_var'], answer: '2ndVar' },
        { id: 27, text: 'What is the output of print(0 == False) in Python?', options: ['True', 'False', 'None of the above', 'error'], answer: 'True' },
        { id: 28, text: 'Which operator is used for membership testing in Python?', options: ['in', 'is', '==', '!='], answer: 'in' },
        { id: 29, text: 'What is the output of "Hello" + "World" in Python?', options: ['HelloWorld', 'Hello World', 'error', 'None of the above'], answer: 'HelloWorld' },
        { id: 30, text: 'Which keyword is used to handle exceptions in Python?', options: ['try', 'except', 'catch', 'finally'], answer: 'except' },
    ],
    java: [
        { id: 1, text: 'What is Java?', options: ['A programming language', 'A type of coffee', 'A scripting language', 'A database'], answer: 'A programming language' },
        { id: 2, text: 'Which of the following is a Java data type?', options: ['int', 'String', 'boolean', 'All of the above'], answer: 'All of the above' },
        { id: 3, text: 'What is the correct way to declare a variable in Java?', options: ['int x;', 'x int;', 'variable x;', 'declare x;'], answer: 'int x;' },
        { id: 4, text: 'Which keyword is used to create a class in Java?', options: ['class', 'def', 'function', 'new'], answer: 'class' },
        { id: 5, text: 'Which of the following is used to handle exceptions in Java?', options: ['try...catch', 'throw', 'return', 'except'], answer: 'try...catch' },
        { id: 6, text: 'What is the main method signature in Java?', options: ['public static void main(String[] args)', 'static public void main(String args)', 'public void main(String args)', 'None of the above'], answer: 'public static void main(String[] args)' },
        { id: 7, text: 'What does the System.out.println() method do?', options: ['Prints to the console', 'Creates a log file', 'Returns a value', 'None of the above'], answer: 'Prints to the console' },
        { id: 8, text: 'What is the output of 3 * 2 + 1 in Java?', options: ['7', '8', '6', 'None of the above'], answer: '7' },
        { id: 9, text: 'Which of the following is used to create an array in Java?', options: ['int[] arr;', 'arr[] int;', 'int arr[];', 'Both A and C'], answer: 'Both A and C' },
        { id: 10, text: 'What is the purpose of the this keyword in Java?', options: ['Refers to the current object', 'Refers to the previous object', 'None of the above', 'Refers to the class'], answer: 'Refers to the current object' },
        { id: 11, text: 'What is the correct way to instantiate an object in Java?', options: ['new ClassName()', 'ClassName new = new ClassName();', 'ClassName obj = new ClassName();', 'None of the above'], answer: 'ClassName obj = new ClassName();' },
        { id: 12, text: 'Which of the following is a valid constructor in Java?', options: ['ClassName()', 'void ClassName()', 'ClassName{}', 'None of the above'], answer: 'ClassName()' },
        { id: 13, text: 'What is polymorphism in Java?', options: ['The ability of an object to take on many forms', 'The process of encapsulating data', 'The ability to inherit properties', 'None of the above'], answer: 'The ability of an object to take on many forms' },
        { id: 14, text: 'Which keyword is used to inherit a class in Java?', options: ['extends', 'inherits', 'implements', 'None of the above'], answer: 'extends' },
        { id: 15, text: 'What does the super keyword do?', options: ['Refers to the parent class', 'Creates an object', 'Accesses a variable', 'None of the above'], answer: 'Refers to the parent class' },
        { id: 16, text: 'Which of the following is not a Java access modifier?', options: ['private', 'public', 'protected', 'hidden'], answer: 'hidden' },
        { id: 17, text: 'What is the purpose of the static keyword in Java?', options: ['Defines class-level variables or methods', 'Creates an object', 'Accesses instance variables', 'None of the above'], answer: 'Defines class-level variables or methods' },
        { id: 18, text: 'Which method is used to compare two strings in Java?', options: ['compareTo()', 'equals()', 'compare()', 'Both A and B'], answer: 'Both A and B' },
        { id: 19, text: 'What is the output of 10 % 3 in Java?', options: ['1', '3', '0', '10'], answer: '1' },
        { id: 20, text: 'Which interface is used for handling events in Java?', options: ['ActionListener', 'EventListener', 'Runnable', 'None of the above'], answer: 'ActionListener' },
        { id: 21, text: 'How do you declare a constant in Java?', options: ['final int x;', 'const int x;', 'int x;', 'None of the above'], answer: 'final int x;' },
        { id: 22, text: 'Which of the following keywords is used to define an interface in Java?', options: ['interface', 'class', 'implements', 'extends'], answer: 'interface' },
        { id: 23, text: 'What is the purpose of the void keyword in Java?', options: ['Indicates that a method does not return a value', 'Indicates that a variable is empty', 'Indicates a null value', 'None of the above'], answer: 'Indicates that a method does not return a value' },
        { id: 24, text: 'What is an abstract class in Java?', options: ['A class that cannot be instantiated', 'A class that can be instantiated', 'A class with no methods', 'None of the above'], answer: 'A class that cannot be instantiated' },
        { id: 25, text: 'What is a constructor in Java?', options: ['A method called when an object is created', 'A method that creates an object', 'A special method that cannot be inherited', 'None of the above'], answer: 'A method called when an object is created' },
        { id: 26, text: 'How do you create a new thread in Java?', options: ['new Thread()', 'Thread t = new Thread();', 'Thread.create()', 'None of the above'], answer: 'Thread t = new Thread();' },
        { id: 27, text: 'What does the instanceof operator do?', options: ['Tests whether an object is an instance of a specific class', 'Creates a new instance', 'Checks variable type', 'None of the above'], answer: 'Tests whether an object is an instance of a specific class' },
        { id: 28, text: 'What is a package in Java?', options: ['A namespace for classes', 'A type of data', 'An array of classes', 'None of the above'], answer: 'A namespace for classes' },
        { id: 29, text: 'How do you create a synchronized method in Java?', options: ['synchronized void methodName()', 'void synchronized methodName()', 'synchronized methodName()', 'None of the above'], answer: 'synchronized void methodName()' },
        { id: 30, text: 'What is the output of the expression "Hello" + 5 in Java?', options: ['Hello5', 'error', '5Hello', 'None of the above'], answer: 'Hello5' },
    ],
    sql: [
        { id: 1, text: 'What does SQL stand for?', options: ['Structured Query Language', 'Simple Query Language', 'Sequential Query Language', 'System Query Language'], answer: 'Structured Query Language' },
        { id: 2, text: 'Which SQL statement is used to extract data from a database?', options: ['SELECT', 'GET', 'OPEN', 'EXTRACT'], answer: 'SELECT' },
        { id: 3, text: 'Which SQL statement is used to update data in a database?', options: ['UPDATE', 'MODIFY', 'CHANGE', 'SET'], answer: 'UPDATE' },
        { id: 4, text: 'Which SQL clause is used to filter the result set based on a condition?', options: ['WHERE', 'HAVING', 'FILTER', 'IF'], answer: 'WHERE' },
        { id: 5, text: 'Which SQL statement is used to delete data from a database?', options: ['DELETE', 'REMOVE', 'DROP', 'CLEAR'], answer: 'DELETE' },
        { id: 6, text: 'Which SQL statement is used to create a new table in a database?', options: ['CREATE TABLE', 'MAKE TABLE', 'NEW TABLE', 'ADD TABLE'], answer: 'CREATE TABLE' },
        { id: 7, text: 'Which SQL keyword is used to prevent duplicate values?', options: ['DISTINCT', 'UNIQUE', 'CHECK', 'PRIMARY KEY'], answer: 'DISTINCT' },
        { id: 8, text: 'Which SQL statement is used to return the number of rows in a table?', options: ['COUNT()', 'SUM()', 'ROWS()', 'LENGTH()'], answer: 'COUNT()' },
        { id: 9, text: 'How do you add a new column to an existing table?', options: ['ALTER TABLE', 'MODIFY TABLE', 'UPDATE TABLE', 'INSERT INTO TABLE'], answer: 'ALTER TABLE' },
        { id: 10, text: 'Which SQL function is used to combine two or more strings?', options: ['CONCAT()', 'JOIN()', 'MERGE()', 'APPEND()'], answer: 'CONCAT()' },
        { id: 11, text: 'Which clause is used to group rows that have the same values in SQL?', options: ['GROUP BY', 'ORDER BY', 'PARTITION BY', 'UNION'], answer: 'GROUP BY' },
        { id: 12, text: 'What is the default sorting order in SQL?', options: ['ASC', 'DESC', 'RAND', 'None'], answer: 'ASC' },
        { id: 13, text: 'What does the JOIN clause do in SQL?', options: ['Combines rows from two or more tables', 'Merges databases', 'Updates two tables', 'None of the above'], answer: 'Combines rows from two or more tables' },
        { id: 14, text: 'Which JOIN returns all rows when there is a match in either table?', options: ['FULL OUTER JOIN', 'INNER JOIN', 'LEFT JOIN', 'RIGHT JOIN'], answer: 'FULL OUTER JOIN' },
        { id: 15, text: 'Which SQL keyword is used to sort the result-set?', options: ['ORDER BY', 'SORT BY', 'GROUP BY', 'ARRANGE'], answer: 'ORDER BY' },
        { id: 16, text: 'Which command removes all rows from a table without logging the individual row deletions?', options: ['TRUNCATE', 'DELETE', 'DROP', 'REMOVE'], answer: 'TRUNCATE' },
        { id: 17, text: 'Which operator is used to search for a specified pattern in a column?', options: ['LIKE', 'IN', 'BETWEEN', 'SEARCH'], answer: 'LIKE' },
        { id: 18, text: 'Which SQL function returns the largest value from a set of values?', options: ['MAX()', 'MIN()', 'BIGGEST()', 'TOP()'], answer: 'MAX()' },
        { id: 19, text: 'Which SQL statement is used to remove a table from the database?', options: ['DROP TABLE', 'REMOVE TABLE', 'DELETE TABLE', 'CLEAR TABLE'], answer: 'DROP TABLE' },
        { id: 20, text: 'What is a primary key in SQL?', options: ['A unique identifier for a record', 'A key that points to another table', 'A constraint for nullable fields', 'None of the above'], answer: 'A unique identifier for a record' },
        { id: 21, text: 'What is the purpose of the foreign key in SQL?', options: ['Links two tables together', 'Deletes a record', 'Defines a unique constraint', 'None of the above'], answer: 'Links two tables together' },
        { id: 22, text: 'Which SQL function is used to calculate the total of a numeric column?', options: ['SUM()', 'TOTAL()', 'ADD()', 'AVG()'], answer: 'SUM()' },
        { id: 23, text: 'What does the UNIQUE constraint ensure in SQL?', options: ['All values are different in a column', 'All values are the same', 'Values are always non-null', 'None of the above'], answer: 'All values are different in a column' },
        { id: 24, text: 'Which SQL statement is used to add a new row to a table?', options: ['INSERT INTO', 'ADD ROW', 'APPEND ROW', 'NEW ROW'], answer: 'INSERT INTO' },
        { id: 25, text: 'Which SQL keyword is used to fetch only unique values?', options: ['DISTINCT', 'UNIQUE', 'CHECK', 'PRIMARY KEY'], answer: 'DISTINCT' },
        { id: 26, text: 'How do you rename a column in SQL?', options: ['ALTER TABLE', 'MODIFY COLUMN', 'CHANGE COLUMN', 'RENAME COLUMN'], answer: 'ALTER TABLE' },
        { id: 27, text: 'What does the HAVING clause do in SQL?', options: ['Filters records after grouping', 'Filters records before grouping', 'Sorts records', 'None of the above'], answer: 'Filters records after grouping' },
        { id: 28, text: 'What is a view in SQL?', options: ['A virtual table based on the result-set of a query', 'A physical table', 'A pointer to a table', 'None of the above'], answer: 'A virtual table based on the result-set of a query' },
        { id: 29, text: 'Which SQL statement is used to remove duplicates from a result set?', options: ['DISTINCT', 'DELETE', 'REMOVE DUPLICATES', 'GROUP BY'], answer: 'DISTINCT' },
        { id: 30, text: 'Which of the following is a valid aggregate function in SQL?', options: ['AVG()', 'MEAN()', 'SUM()', 'Both A and C'], answer: 'Both A and C' }
    ],Mongoose: [
        { id: 1, text: 'What is Mongoose?', options: ['An ODM for MongoDB', 'A SQL database', 'A type of NoSQL database', 'A JavaScript framework'], answer: 'An ODM for MongoDB' },
        { id: 2, text: 'How do you connect to a MongoDB database using Mongoose?', options: ['mongoose.connect()', 'mongoose.connectTo()', 'mongoose.open()', 'mongoose.link()'], answer: 'mongoose.connect()' },
        { id: 3, text: 'What is a schema in Mongoose?', options: ['A structure that defines a document', 'A query to find documents', 'A database collection', 'A middleware function'], answer: 'A structure that defines a document' },
        { id: 4, text: 'Which method is used to create a model in Mongoose?', options: ['mongoose.model()', 'mongoose.createModel()', 'mongoose.makeModel()', 'mongoose.newModel()'], answer: 'mongoose.model()' },
        { id: 5, text: 'How do you define a string type in a Mongoose schema?', options: ['type: String', 'type: "String"', 'String: type', 'type: "string"'], answer: 'type: String' },
        { id: 6, text: 'What is the purpose of the `save()` method in Mongoose?', options: ['To save a document to the database', 'To delete a document', 'To update a document', 'To retrieve a document'], answer: 'To save a document to the database' },
        { id: 7, text: 'How do you find all documents in a collection using Mongoose?', options: ['Model.find()', 'Model.get()', 'Model.fetch()', 'Model.all()'], answer: 'Model.find()' },
        { id: 8, text: 'What is a middleware in Mongoose?', options: ['A function that is executed during a document operation', 'A type of schema', 'A database collection', 'A query to find documents'], answer: 'A function that is executed during a document operation' },
        { id: 9, text: 'Which Mongoose method is used to update a document?', options: ['Model.update()', 'Model.modify()', 'Model.change()', 'Model.alter()'], answer: 'Model.update()' },
        { id: 10, text: 'What does the `populate()` method do in Mongoose?', options: ['Populate fields with documents from other collections', 'Count the number of documents', 'Sort documents', 'Filter documents'], answer: 'Populate fields with documents from other collections' },
        { id: 11, text: 'How do you remove a document using Mongoose?', options: ['Model.deleteOne()', 'Model.remove()', 'Model.erase()', 'Model.destroy()'], answer: 'Model.deleteOne()' },
        { id: 12, text: 'What does the `lean()` method do in Mongoose?', options: ['Returns plain JavaScript objects instead of Mongoose documents', 'Clones a document', 'Creates a new document', 'Updates a document'], answer: 'Returns plain JavaScript objects instead of Mongoose documents' },
        { id: 13, text: 'What is the purpose of the `findOne()` method?', options: ['To find a single document that matches the criteria', 'To find all documents', 'To update a document', 'To delete a document'], answer: 'To find a single document that matches the criteria' },
        { id: 14, text: 'Which method is used to validate a Mongoose document before saving?', options: ['validate()', 'check()', 'save()', 'ensure()'], answer: 'validate()' },
        { id: 15, text: 'What is a virtual in Mongoose?', options: ['A property that is not stored in MongoDB but can be used in queries', 'A method to create a document', 'A type of index', 'A document reference'], answer: 'A property that is not stored in MongoDB but can be used in queries' },
        { id: 16, text: 'What is the purpose of the `Schema.Types` in Mongoose?', options: ['To define custom data types', 'To create models', 'To validate documents', 'To connect to a database'], answer: 'To define custom data types' },
        { id: 17, text: 'How do you define a required field in a Mongoose schema?', options: ['required: true', 'isRequired: true', 'mustHave: true', 'notNull: true'], answer: 'required: true' },
        { id: 18, text: 'What does the `index()` method do in Mongoose?', options: ['Creates an index on a schema path', 'Counts the number of documents', 'Sorts documents', 'Filters documents'], answer: 'Creates an index on a schema path' },
        { id: 19, text: 'Which of the following is used to handle errors in Mongoose?', options: ['try-catch', 'Promise.catch()', 'Mongoose.catch()', 'all of the above'], answer: 'all of the above' },
        { id: 20, text: 'What is the purpose of the `set()` method in a Mongoose schema?', options: ['To set default values for fields', 'To change document data', 'To delete a field', 'To create a field'], answer: 'To set default values for fields' },
        { id: 21, text: 'How do you create a new document in Mongoose?', options: ['new Model()', 'create(Model)', 'Model.create()', 'Model.new()'], answer: 'Model.create()' },
        { id: 22, text: 'Which method is used to find documents based on specific criteria in Mongoose?', options: ['Model.find()', 'Model.query()', 'Model.search()', 'Model.lookup()'], answer: 'Model.find()' },
        { id: 23, text: 'What is the purpose of the `distinct()` method in Mongoose?', options: ['To find unique values for a specified field', 'To find all values', 'To aggregate values', 'To count values'], answer: 'To find unique values for a specified field' },
        { id: 24, text: 'How do you implement pagination in Mongoose?', options: ['Using skip() and limit()', 'Using paginate()', 'Using offset() and count()', 'Using fetch()'], answer: 'Using skip() and limit()' },
        { id: 25, text: 'What does the `createIndexes()` method do?', options: ['Creates indexes on a collection', 'Creates a new collection', 'Counts documents', 'Removes indexes'], answer: 'Creates indexes on a collection' },
        { id: 26, text: 'Which of the following is a valid way to define a Mongoose schema?', options: ['new mongoose.Schema({})', 'mongoose.Schema({})', 'mongoose.createSchema({})', 'mongoose.defineSchema({})'], answer: 'new mongoose.Schema({})' },
        { id: 27, text: 'What is the use of `mongoose.Types.ObjectId()`?', options: ['To create a new ObjectId', 'To convert a string to ObjectId', 'To check if a value is an ObjectId', 'All of the above'], answer: 'All of the above' },
        { id: 28, text: 'How do you set a unique constraint on a field in Mongoose?', options: ['unique: true', 'distinct: true', 'uniqueValue: true', 'onlyOne: true'], answer: 'unique: true' },
        { id: 29, text: 'What does the `findById()` method do in Mongoose?', options: ['Finds a document by its ID', 'Finds documents by a query', 'Updates a document by its ID', 'Deletes a document by its ID'], answer: 'Finds a document by its ID' },
        { id: 30, text: 'Which command is used to create a Mongoose model from a schema?', options: ['mongoose.model()', 'mongoose.createModel()', 'mongoose.newModel()', 'mongoose.defineModel()'], answer: 'mongoose.model()' },
    ],
    react: [
        { id: 1, text: 'What is React?', options: ['A JavaScript library for building user interfaces', 'A database', 'A CSS framework', 'A server-side language'], answer: 'A JavaScript library for building user interfaces' },
        { id: 2, text: 'What does JSX stand for?', options: ['JavaScript XML', 'Java Syntax Extension', 'JavaScript XSS', 'JavaScript XML Structure'], answer: 'JavaScript XML' },
        { id: 3, text: 'What is a component in React?', options: ['A reusable piece of UI', 'A type of state', 'A lifecycle method', 'A library'], answer: 'A reusable piece of UI' },
        { id: 4, text: 'What are props in React?', options: ['Properties passed to components', 'State variables', 'Component methods', 'None of the above'], answer: 'Properties passed to components' },
        { id: 5, text: 'What is the purpose of the useState hook?', options: ['To manage state in functional components', 'To handle side effects', 'To create class components', 'To manage routing'], answer: 'To manage state in functional components' },
        { id: 6, text: 'What does the useEffect hook do?', options: ['Performs side effects in functional components', 'Manages state', 'Renders components', 'Creates components'], answer: 'Performs side effects in functional components' },
        { id: 7, text: 'How do you pass data from a parent component to a child component?', options: ['Using props', 'Using state', 'Using context', 'Using hooks'], answer: 'Using props' },
        { id: 8, text: 'What is the purpose of the key prop in React lists?', options: ['To help React identify which items have changed', 'To set the ID of the element', 'To provide unique styles', 'To manage event listeners'], answer: 'To help React identify which items have changed' },
        { id: 9, text: 'What is the use of the React Router?', options: ['To manage navigation between components', 'To handle state management', 'To style components', 'To fetch data'], answer: 'To manage navigation between components' },
        { id: 10, text: 'What is a higher-order component (HOC)?', options: ['A function that takes a component and returns a new component', 'A type of hook', 'A method for state management', 'A lifecycle method'], answer: 'A function that takes a component and returns a new component' },
        { id: 11, text: 'What is the purpose of context in React?', options: ['To share data between components without passing props', 'To handle routing', 'To manage state', 'To create components'], answer: 'To share data between components without passing props' },
        { id: 12, text: 'What does the useReducer hook do?', options: ['Manages complex state in functional components', 'Renders components', 'Handles side effects', 'Updates component lifecycle'], answer: 'Manages complex state in functional components' },
        { id: 13, text: 'How can you conditionally render a component in React?', options: ['Using ternary operator or logical &&', 'Using if statements only', 'Using CSS classes', 'Using props only'], answer: 'Using ternary operator or logical &&' },
        { id: 14, text: 'What is the purpose of React.Fragment?', options: ['To group multiple elements without adding extra nodes', 'To handle state', 'To fetch data', 'To manage routing'], answer: 'To group multiple elements without adding extra nodes' },
        { id: 15, text: 'How do you create a functional component in React?', options: ['By using a function that returns JSX', 'By using a class', 'By using a variable', 'By using a hook'], answer: 'By using a function that returns JSX' },
        { id: 16, text: 'What is the difference between state and props?', options: ['State is managed within the component, props are passed from parent to child', 'Props are managed within the component, state is passed from parent to child', 'Both are the same', 'None of the above'], answer: 'State is managed within the component, props are passed from parent to child' },
        { id: 17, text: 'What does the useRef hook do?', options: ['Creates a mutable object that persists for the full lifetime of the component', 'Renders components', 'Manages state', 'Handles side effects'], answer: 'Creates a mutable object that persists for the full lifetime of the component' },
        { id: 18, text: 'What is a controlled component?', options: ['A component whose value is controlled by React state', 'A component that does not use state', 'A component that cannot be rendered', 'None of the above'], answer: 'A component whose value is controlled by React state' },
        { id: 19, text: 'How do you lift state up in React?', options: ['By moving the state to a common ancestor component', 'By creating a new component', 'By using hooks', 'By using context'], answer: 'By moving the state to a common ancestor component' },
        { id: 20, text: 'What is the use of the shouldComponentUpdate lifecycle method?', options: ['To optimize performance by preventing unnecessary re-renders', 'To render components', 'To fetch data', 'To manage state'], answer: 'To optimize performance by preventing unnecessary re-renders' },
        { id: 21, text: 'What is React.memo?', options: ['A higher-order component that memoizes the result of a component', 'A method to fetch data', 'A way to manage state', 'A CSS framework'], answer: 'A higher-order component that memoizes the result of a component' },
        { id: 22, text: 'How do you handle events in React?', options: ['By using camelCase syntax', 'By using lowercase', 'By using capitalized names', 'By using event listeners'], answer: 'By using camelCase syntax' },
        { id: 23, text: 'What is the purpose of the useLayoutEffect hook?', options: ['To run effects synchronously after all DOM mutations', 'To run effects asynchronously', 'To manage state', 'To fetch data'], answer: 'To run effects synchronously after all DOM mutations' },
        { id: 24, text: 'What is the purpose of the React.StrictMode component?', options: ['To identify potential problems in an application', 'To render components', 'To manage state', 'To create routes'], answer: 'To identify potential problems in an application' },
        { id: 25, text: 'What is the role of the ReactDOM package?', options: ['To interact with the DOM in a React application', 'To manage state', 'To create components', 'To handle routing'], answer: 'To interact with the DOM in a React application' },
        { id: 26, text: 'What is the difference between class components and functional components?', options: ['Class components can have lifecycle methods, functional components cannot', 'Functional components can manage state, class components cannot', 'Both are the same', 'None of the above'], answer: 'Class components can have lifecycle methods, functional components cannot' },
        { id: 27, text: 'What does the useCallback hook do?', options: ['Returns a memoized callback function', 'Manages state', 'Fetches data', 'Renders components'], answer: 'Returns a memoized callback function' },
        { id: 28, text: 'What is the purpose of the useImperativeHandle hook?', options: ['Customizes the instance value that is exposed when using ref', 'Manages state', 'Fetches data', 'Renders components'], answer: 'Customizes the instance value that is exposed when using ref' },
        { id: 29, text: 'What is the purpose of the useDebugValue hook?', options: ['To display a label in React DevTools', 'To manage state', 'To fetch data', 'To handle routing'], answer: 'To display a label in React DevTools' },
        { id: 30, text: 'What is the role of the componentDidMount lifecycle method?', options: ['Runs after the component is mounted', 'Runs before the component is mounted', 'Runs when the component is updated', 'Runs when the component is unmounted'], answer: 'Runs after the component is mounted' },
    ],
    C:[
        { id: 1, text: 'What is C?', options: ['A programming language', 'A database', 'An operating system', 'None of the above'], answer: 'A programming language' },
        { id: 2, text: 'What is the correct syntax to declare a pointer in C?', options: ['int *ptr;', 'pointer int ptr;', 'int ptr;', 'ptr int;'], answer: 'int *ptr;' },
        { id: 3, text: 'Which of the following loops is available in C?', options: ['for', 'while', 'do-while', 'All of the above'], answer: 'All of the above' },
        { id: 4, text: 'Which keyword is used to define a constant in C?', options: ['const', 'constant', 'define', 'None of the above'], answer: 'const' },
        { id: 5, text: 'What is the purpose of the #include directive in C?', options: ['To include standard library files', 'To define variables', 'To handle exceptions', 'None of the above'], answer: 'To include standard library files' },
        { id: 6, text: 'What is the output of 5 / 2 in C?', options: ['2', '2.5', 'error', 'None of the above'], answer: '2' },
        { id: 7, text: 'Which of the following operators is used to access the value of a variable through a pointer in C?', options: ['*', '&', '%', '@'], answer: '*' },
        { id: 8, text: 'What is the entry point for a C program?', options: ['start()', 'main()', 'init()', 'None of the above'], answer: 'main()' },
        { id: 9, text: 'What is the size of int in C on a 32-bit system?', options: ['2 bytes', '4 bytes', '8 bytes', '1 byte'], answer: '4 bytes' },
        { id: 10, text: 'Which of the following is used to allocate memory dynamically in C?', options: ['malloc()', 'calloc()', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 11, text: 'What is the purpose of the void keyword in C?', options: ['Indicates a function returns no value', 'Declares a void variable', 'Indicates a null value', 'None of the above'], answer: 'Indicates a function returns no value' },
        { id: 12, text: 'Which of the following is not a valid variable name in C?', options: ['int var;', 'float 1var;', 'char var1;', 'None of the above'], answer: 'float 1var;' },
        { id: 13, text: 'What is the correct syntax to declare an array in C?', options: ['int arr[5];', 'array int arr[5];', 'int arr = [5];', 'None of the above'], answer: 'int arr[5];' },
        { id: 14, text: 'Which of the following is not a valid function declaration in C?', options: ['void function();', 'int function(int);', 'function int();', 'None of the above'], answer: 'function int();' },
        { id: 15, text: 'What does the continue statement do in C?', options: ['Skips the rest of the current loop iteration', 'Exits the loop', 'Restarts the loop', 'None of the above'], answer: 'Skips the rest of the current loop iteration' },
        { id: 16, text: 'What is the output of 5 % 3 in C?', options: ['2', '1', '0', 'error'], answer: '2' },
        { id: 17, text: 'Which of the following is used to terminate a program in C?', options: ['exit()', 'terminate()', 'abort()', 'Both A and C'], answer: 'Both A and C' },
        { id: 18, text: 'Which function is used to read a string in C?', options: ['scanf()', 'gets()', 'fgets()', 'Both B and C'], answer: 'Both B and C' },
        { id: 19, text: 'Which of the following statements is used to allocate memory for an array dynamically in C?', options: ['int *arr = malloc(10 * sizeof(int));', 'int arr[10];', 'Both A and B', 'None of the above'], answer: 'int *arr = malloc(10 * sizeof(int));' },
        { id: 20, text: 'What is the purpose of the break statement in C?', options: ['Exits a loop', 'Continues the loop', 'Returns a value', 'None of the above'], answer: 'Exits a loop' },
        { id: 21, text: 'What is the purpose of the sizeof operator in C?', options: ['Returns the size of a data type', 'Returns the size of a variable', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 22, text: 'What will be the output of printf("%d", 10 < 5);?', options: ['0', '1', '10', 'error'], answer: '0' },
        { id: 23, text: 'Which of the following is a valid pointer declaration in C?', options: ['int *ptr;', 'int ptr*;', 'int ptr;', 'None of the above'], answer: 'int *ptr;' },
        { id: 24, text: 'What does the return statement do in C?', options: ['Exits a function', 'Returns a value from a function', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 25, text: 'Which of the following data types is not supported by C?', options: ['int', 'char', 'string', 'float'], answer: 'string' },
        { id: 26, text: 'What is the difference between malloc() and calloc() in C?', options: ['malloc initializes memory, calloc does not', 'calloc initializes memory, malloc does not', 'Both are the same', 'None of the above'], answer: 'calloc initializes memory, malloc does not' },
        { id: 27, text: 'Which function is used to compare two strings in C?', options: ['strcmp()', 'strcmpi()', 'stringcmp()', 'None of the above'], answer: 'strcmp()' },
        { id: 28, text: 'What is the output of printf("%d", 10 % 3);?', options: ['1', '2', '3', '10'], answer: '1' },
        { id: 29, text: 'Which keyword is used to define an inline function in C?', options: ['inline', 'define', 'func', 'None of the above'], answer: 'inline' },
        { id: 30, text: 'What is the correct syntax to define a structure in C?', options: ['struct StructName { int a; };', 'structure StructName { int a; };', 'int StructName();', 'None of the above'], answer: 'struct StructName { int a; };' },
    ],
    go: [
        { id: 1, text: 'What is Go?', options: ['A programming language', 'A type of coffee', 'A web framework', 'A database'], answer: 'A programming language' },
        { id: 2, text: 'Who created Go?', options: ['Google', 'Microsoft', 'Facebook', 'Apple'], answer: 'Google' },
        { id: 3, text: 'What is the file extension for Go files?', options: ['.go', '.golang', '.gocode', '.gofile'], answer: '.go' },
        { id: 4, text: 'What does the Go command "go run" do?', options: ['Compiles and runs a Go program', 'Only compiles the program', 'Only runs a pre-compiled program', 'Installs Go packages'], answer: 'Compiles and runs a Go program' },
        { id: 5, text: 'What is a goroutine?', options: ['A lightweight thread managed by Go', 'A data structure', 'A package in Go', 'A type of function'], answer: 'A lightweight thread managed by Go' },
        { id: 6, text: 'How do you declare a variable in Go?', options: ['var x int', 'x int = 10', 'int x', 'let x: int'], answer: 'var x int' },
        { id: 7, text: 'What is the purpose of the "defer" statement?', options: ['To delay the execution of a function until the surrounding function returns', 'To stop the execution of a program', 'To declare constants', 'To create goroutines'], answer: 'To delay the execution of a function until the surrounding function returns' },
        { id: 8, text: 'How do you define a function in Go?', options: ['func functionName() {}', 'function functionName() {}', 'def functionName() {}', 'functionName() {}'], answer: 'func functionName() {}' },
        { id: 9, text: 'What is a slice in Go?', options: ['A dynamically-sized array', 'A fixed-size array', 'A data structure for maps', 'A type of variable'], answer: 'A dynamically-sized array' },
        { id: 10, text: 'What is a map in Go?', options: ['A built-in data type that associates keys with values', 'A type of function', 'A type of variable', 'A package in Go'], answer: 'A built-in data type that associates keys with values' },
        { id: 11, text: 'How do you handle errors in Go?', options: ['By returning an error as a value', 'By using exceptions', 'By using a try-catch block', 'By ignoring them'], answer: 'By returning an error as a value' },
        { id: 12, text: 'What is the purpose of the "interface" type in Go?', options: ['To define a set of methods that a type must implement', 'To create data structures', 'To manage goroutines', 'To handle exceptions'], answer: 'To define a set of methods that a type must implement' },
        { id: 13, text: 'How do you create a struct in Go?', options: ['type StructName struct {}', 'struct StructName {}', 'new StructName()', 'StructName() {}'], answer: 'type StructName struct {}' },
        { id: 14, text: 'What is the purpose of the "go" keyword?', options: ['To start a new goroutine', 'To declare a variable', 'To define a function', 'To create a package'], answer: 'To start a new goroutine' },
        { id: 15, text: 'How do you install a Go package?', options: ['go get package_name', 'go install package_name', 'go download package_name', 'go add package_name'], answer: 'go get package_name' },
        { id: 16, text: 'What is the purpose of the "main" package?', options: ['It is the entry point of a Go application', 'It defines utility functions', 'It manages packages', 'It handles errors'], answer: 'It is the entry point of a Go application' },
        { id: 17, text: 'What does the "fmt" package provide?', options: ['Formatted I/O', 'Data structures', 'Network functionality', 'File handling'], answer: 'Formatted I/O' },
        { id: 18, text: 'How do you create a constant in Go?', options: ['const pi = 3.14', 'constant pi = 3.14', 'var pi = 3.14', 'let pi = 3.14'], answer: 'const pi = 3.14' },
        { id: 19, text: 'What is the "select" statement used for in Go?', options: ['To handle multiple channels', 'To declare variables', 'To create goroutines', 'To manage errors'], answer: 'To handle multiple channels' },
        { id: 20, text: 'What is a channel in Go?', options: ['A way to communicate between goroutines', 'A data structure', 'A type of variable', 'A package in Go'], answer: 'A way to communicate between goroutines' },
        { id: 21, text: 'How do you declare a channel in Go?', options: ['make(chan Type)', 'chan Type = make()', 'channel Type', 'Type chan = make()'], answer: 'make(chan Type)' },
        { id: 22, text: 'What does the "go mod" command do?', options: ['Manages dependencies in Go projects', 'Compiles Go code', 'Runs Go tests', 'Formats Go code'], answer: 'Manages dependencies in Go projects' },
        { id: 23, text: 'How do you run tests in Go?', options: ['go test', 'go run tests', 'go check', 'go validate'], answer: 'go test' },
        { id: 24, text: 'What is the purpose of the "time" package?', options: ['To handle time-related functionality', 'To manage strings', 'To handle I/O operations', 'To manage arrays'], answer: 'To handle time-related functionality' },
        { id: 25, text: 'What is the syntax to create a new Go module?', options: ['go mod init module_name', 'go create module_name', 'go new module_name', 'go module module_name'], answer: 'go mod init module_name' },
        { id: 26, text: 'What is the purpose of the "sync" package?', options: ['To provide synchronization primitives', 'To handle I/O operations', 'To manage errors', 'To create data structures'], answer: 'To provide synchronization primitives' },
        { id: 27, text: 'What does the "panic" function do?', options: ['Stops the normal execution of the current goroutine', 'Creates a new goroutine', 'Handles errors', 'Returns a value'], answer: 'Stops the normal execution of the current goroutine' },
        { id: 28, text: 'What is the purpose of the "recover" function?', options: ['To regain control of a panicking goroutine', 'To create a new goroutine', 'To manage state', 'To handle errors'], answer: 'To regain control of a panicking goroutine' },
        { id: 29, text: 'How do you import a package in Go?', options: ['import "package_name"', 'using "package_name"', 'require "package_name"', 'include "package_name"'], answer: 'import "package_name"' },
        { id: 30, text: 'What is the role of the "go get" command?', options: ['To download and install Go packages', 'To compile Go code', 'To run tests', 'To format Go code'], answer: 'To download and install Go packages' },
    ],
     Cpp: [
        { id: 1, text: 'What is C++?', options: ['A programming language', 'A type of coffee', 'A database', 'None of the above'], answer: 'A programming language' },
        { id: 2, text: 'Which of the following is a C++ data type?', options: ['int', 'float', 'bool', 'All of the above'], answer: 'All of the above' },
        { id: 3, text: 'Which keyword is used to create a class in C++?', options: ['class', 'struct', 'def', 'new'], answer: 'class' },
        { id: 4, text: 'What does the delete operator do in C++?', options: ['Frees allocated memory', 'Deletes a variable', 'Deletes a function', 'None of the above'], answer: 'Frees allocated memory' },
        { id: 5, text: 'What is the output of the expression "Hello" + 5 in C++?', options: ['Hello5', 'error', '5Hello', 'None of the above'], answer: 'error' },
        { id: 6, text: 'What is the purpose of a constructor in C++?', options: ['To initialize an object', 'To create a class', 'To declare a variable', 'None of the above'], answer: 'To initialize an object' },
        { id: 7, text: 'Which of the following is a feature of C++ but not C?', options: ['Object-Oriented Programming', 'Pointers', 'Preprocessor directives', 'None of the above'], answer: 'Object-Oriented Programming' },
        { id: 8, text: 'Which of the following is not an access specifier in C++?', options: ['public', 'private', 'protected', 'default'], answer: 'default' },
        { id: 9, text: 'What is the purpose of a destructor in C++?', options: ['To clean up resources when an object is destroyed', 'To create an object', 'To declare a class', 'None of the above'], answer: 'To clean up resources when an object is destroyed' },
        { id: 10, text: 'What does the virtual keyword do in C++?', options: ['Indicates a function can be overridden', 'Indicates a variable is constant', 'Declares a pointer', 'None of the above'], answer: 'Indicates a function can be overridden' },
        { id: 11, text: 'Which of the following is used for dynamic memory allocation in C++?', options: ['malloc()', 'new', 'calloc()', 'Both A and B'], answer: 'new' },
        { id: 12, text: 'What is the difference between public and private access specifiers in C++?', options: ['Public members are accessible outside the class, private members are not', 'Public members are only accessible within the class, private members are accessible outside', 'There is no difference', 'None of the above'], answer: 'Public members are accessible outside the class, private members are not' },
        { id: 13, text: 'What is an inline function in C++?', options: ['A function that is defined inside a class', 'A function that is expanded inline during compilation', 'A function that is not defined', 'None of the above'], answer: 'A function that is expanded inline during compilation' },
        { id: 14, text: 'What is the purpose of the friend keyword in C++?', options: ['Allows a function or class to access private members of another class', 'Allows a function to be global', 'Defines a global variable', 'None of the above'], answer: 'Allows a function or class to access private members of another class' },
        { id: 15, text: 'Which of the following is a constructor in C++?', options: ['MyClass()', 'MyClass', 'MyClass[]', 'None of the above'], answer: 'MyClass()' },
        { id: 16, text: 'What is the output of the following code: cout << 5 / 2;', options: ['2', '2.5', 'error', 'None of the above'], answer: '2' },
        { id: 17, text: 'Which of the following is a feature of C++?', options: ['Encapsulation', 'Inheritance', 'Polymorphism', 'All of the above'], answer: 'All of the above' },
        { id: 18, text: 'What is the purpose of static keyword in C++?', options: ['To define a variable that retains its value between function calls', 'To define a class', 'To define a constant', 'None of the above'], answer: 'To define a variable that retains its value between function calls' },
        { id: 19, text: 'Which of the following is used to handle exceptions in C++?', options: ['try...catch', 'throw', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 20, text: 'What is the correct syntax for defining a structure in C++?', options: ['struct StructName { int a; };', 'structure StructName { int a; };', 'int StructName();', 'None of the above'], answer: 'struct StructName { int a; };' },
        { id: 21, text: 'What is a virtual function in C++?', options: ['A function defined in a base class that can be overridden in a derived class', 'A global function', 'A function that is called at runtime', 'None of the above'], answer: 'A function defined in a base class that can be overridden in a derived class' },
        { id: 22, text: 'What is the output of the following code: cout << (10 == 10);', options: ['0', '1', '10', 'error'], answer: '1' },
        { id: 23, text: 'What is the purpose of the namespace keyword in C++?', options: ['To define a scope for identifiers', 'To declare variables', 'To include libraries', 'None of the above'], answer: 'To define a scope for identifiers' },
        { id: 24, text: 'Which operator is used to access members of a class in C++?', options: ['.', '->', '::', 'All of the above'], answer: 'All of the above' },
        { id: 25, text: 'What is the purpose of the const keyword in C++?', options: ['To define a constant variable', 'To declare a read-only variable', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 26, text: 'What is an abstract class in C++?', options: ['A class that cannot be instantiated', 'A class with no members', 'A class with only virtual functions', 'None of the above'], answer: 'A class that cannot be instantiated' },
        { id: 27, text: 'Which of the following is used to create a template in C++?', options: ['template<typename T>', 'template<class T>', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 28, text: 'What is the purpose of the this pointer in C++?', options: ['To refer to the calling object', 'To refer to the base class', 'To refer to the derived class', 'None of the above'], answer: 'To refer to the calling object' },
        { id: 29, text: 'What is operator overloading in C++?', options: ['Defining a new operator', 'Overriding a function', 'Changing the way operators work for user-defined types', 'None of the above'], answer: 'Changing the way operators work for user-defined types' },
        { id: 30, text: 'What is a smart pointer in C++?', options: ['A pointer that automatically manages memory', 'A pointer that cannot be changed', 'A pointer that can point to multiple objects', 'None of the above'], answer: 'A pointer that automatically manages memory' },
    ],
    typescript: [
        { id: 1, text: 'What is TypeScript?', options: ['A superset of JavaScript', 'A type of coffee', 'A JavaScript framework', 'A database'], answer: 'A superset of JavaScript' },
        { id: 2, text: 'Who developed TypeScript?', options: ['Microsoft', 'Google', 'Facebook', 'Apple'], answer: 'Microsoft' },
        { id: 3, text: 'What file extension is used for TypeScript files?', options: ['.ts', '.typescript', '.js', '.json'], answer: '.ts' },
        { id: 4, text: 'What is the primary benefit of using TypeScript?', options: ['Static typing', 'Dynamic typing', 'Faster execution', 'More libraries'], answer: 'Static typing' },
        { id: 5, text: 'How do you declare a variable in TypeScript?', options: ['let x: number', 'var x: number', 'const x: number', 'All of the above'], answer: 'All of the above' },
        { id: 6, text: 'What does the "any" type represent in TypeScript?', options: ['Any value', 'No value', 'Undefined value', 'Null value'], answer: 'Any value' },
        { id: 7, text: 'How do you define an interface in TypeScript?', options: ['interface Name { }', 'define Name { }', 'class Name { }', 'type Name = { }'], answer: 'interface Name { }' },
        { id: 8, text: 'What is the purpose of the "readonly" modifier in TypeScript?', options: ['To prevent modification of a property', 'To make a property writable', 'To create an interface', 'To define a function'], answer: 'To prevent modification of a property' },
        { id: 9, text: 'How do you create a union type in TypeScript?', options: ['type Name = string | number', 'type Name = string & number', 'type Name = string => number', 'type Name = string and number'], answer: 'type Name = string | number' },
        { id: 10, text: 'What does the "never" type indicate?', options: ['A value that will never occur', 'A variable that can have any value', 'A function that always returns a value', 'A constant'], answer: 'A value that will never occur' },
        { id: 11, text: 'How do you create a generic type in TypeScript?', options: ['function Name<T>(arg: T): T { }', 'function Name<T>(arg: any): T { }', 'function Name<T>(arg: T): void { }', 'All of the above'], answer: 'function Name<T>(arg: T): T { }' },
        { id: 12, text: 'What is a tuple in TypeScript?', options: ['An array with fixed sizes and types', 'A dynamic array', 'An object', 'A function'], answer: 'An array with fixed sizes and types' },
        { id: 13, text: 'How do you declare a type alias in TypeScript?', options: ['type Name = typeDefinition', 'const Name = typeDefinition', 'interface Name = typeDefinition', 'function Name = typeDefinition'], answer: 'type Name = typeDefinition' },
        { id: 14, text: 'What is the difference between "interface" and "type" in TypeScript?', options: ['"interface" can be merged; "type" cannot', '"type" can be merged; "interface" cannot', 'No difference', 'Both can be used interchangeably'], answer: '"interface" can be merged; "type" cannot' },
        { id: 15, text: 'What does the "as" keyword do in TypeScript?', options: ['Type assertion', 'Type declaration', 'Type definition', 'Type alias'], answer: 'Type assertion' },
        { id: 16, text: 'How do you enable strict mode in TypeScript?', options: ['Add "strict": true to tsconfig.json', 'Add "strict" at the top of the file', 'Enable strict mode in the IDE', 'Strict mode is enabled by default'], answer: 'Add "strict": true to tsconfig.json' },
        { id: 17, text: 'What is a decorator in TypeScript?', options: ['A special type of declaration that can be attached to a class, method, or property', 'A function that decorates strings', 'A way to modify the behavior of a function', 'None of the above'], answer: 'A special type of declaration that can be attached to a class, method, or property' },
        { id: 18, text: 'How do you handle optional properties in TypeScript?', options: ['By using the "?" symbol', 'By using "optional"', 'By using "nullable"', 'By using "undefined"'], answer: 'By using the "?" symbol' },
        { id: 19, text: 'What is the purpose of the "this" keyword in TypeScript?', options: ['Refers to the current instance of a class', 'Refers to the parent class', 'Refers to the global object', 'None of the above'], answer: 'Refers to the current instance of a class' },
        { id: 20, text: 'What is the purpose of the "public" modifier in TypeScript?', options: ['To allow access from outside the class', 'To restrict access to the class', 'To create static members', 'None of the above'], answer: 'To allow access from outside the class' },
        { id: 21, text: 'How do you define an abstract class in TypeScript?', options: ['abstract class ClassName { }', 'class ClassName { abstract }', 'class ClassName { }', 'None of the above'], answer: 'abstract class ClassName { }' },
        { id: 22, text: 'How do you implement inheritance in TypeScript?', options: ['class Child extends Parent { }', 'class Child inherits Parent { }', 'class Child: Parent { }', 'class Child implements Parent { }'], answer: 'class Child extends Parent { }' },
        { id: 23, text: 'What is the purpose of the "constructor" method in TypeScript?', options: ['To initialize object properties', 'To define class methods', 'To create static properties', 'None of the above'], answer: 'To initialize object properties' },
        { id: 24, text: 'How do you create a promise in TypeScript?', options: ['new Promise((resolve, reject) => { })', 'Promise((resolve, reject) => { })', 'create Promise((resolve, reject) => { })', 'Promise.create((resolve, reject) => { })'], answer: 'new Promise((resolve, reject) => { })' },
        { id: 25, text: 'What is the purpose of the "async" keyword in TypeScript?', options: ['To define asynchronous functions', 'To create promises', 'To handle callbacks', 'To manage state'], answer: 'To define asynchronous functions' },
        { id: 26, text: 'What does the "await" keyword do in TypeScript?', options: ['Pauses execution until the promise resolves', 'Creates a new promise', 'Defines a callback function', 'None of the above'], answer: 'Pauses execution until the promise resolves' },
        { id: 27, text: 'How do you define a class in TypeScript?', options: ['class ClassName { }', 'define ClassName { }', 'type ClassName { }', 'function ClassName { }'], answer: 'class ClassName { }' },
        { id: 28, text: 'What is the use of the "void" type in TypeScript?', options: ['To indicate a function does not return a value', 'To create a variable', 'To declare an interface', 'To manage errors'], answer: 'To indicate a function does not return a value' },
        { id: 29, text: 'What is the purpose of the "strictNullChecks" option in TypeScript?', options: ['To prevent null and undefined from being assigned to other types', 'To enforce type checking', 'To enable strict mode', 'None of the above'], answer: 'To prevent null and undefined from being assigned to other types' },
        { id: 30, text: 'How do you declare a function type in TypeScript?', options: ['type FunctionType = (arg: Type) => ReturnType', 'function FunctionType(arg: Type): ReturnType', 'type FunctionType = (arg: Type) -> ReturnType', 'function FunctionType(arg: Type) = ReturnType'], answer: 'type FunctionType = (arg: Type) => ReturnType' },
    ],
    dart: [
        { id: 1, text: 'What is Dart?', options: ['A programming language', 'A database', 'A framework', 'None of the above'], answer: 'A programming language' },
        { id: 2, text: 'Which of the following is a Dart data type?', options: ['int', 'String', 'bool', 'All of the above'], answer: 'All of the above' },
        { id: 3, text: 'How do you declare a variable in Dart?', options: ['var x;', 'x int;', 'int x;', 'declare x;'], answer: 'var x;' },
        { id: 4, text: 'Which keyword is used to define a constant in Dart?', options: ['const', 'final', 'static', 'Both A and B'], answer: 'Both A and B' },
        { id: 5, text: 'What is the main entry point of a Dart application?', options: ['main()', 'start()', 'run()', 'None of the above'], answer: 'main()' },
        { id: 6, text: 'Which of the following is used for creating a list in Dart?', options: ['List<int>', 'List()', 'var list = []', 'All of the above'], answer: 'All of the above' },
        { id: 7, text: 'What is the purpose of the async keyword in Dart?', options: ['To define a synchronous function', 'To run code asynchronously', 'To wait for a response', 'None of the above'], answer: 'To run code asynchronously' },
        { id: 8, text: 'Which of the following can be used to handle exceptions in Dart?', options: ['try...catch', 'throw', 'onError', 'All of the above'], answer: 'All of the above' },
        { id: 9, text: 'How do you define a function in Dart?', options: ['def functionName() {}', 'function functionName() {}', 'void functionName() {}', 'None of the above'], answer: 'def functionName() {}' },
        { id: 10, text: 'What is a future in Dart?', options: ['A way to handle asynchronous operations', 'A data type', 'An operator', 'None of the above'], answer: 'A way to handle asynchronous operations' },
        { id: 11, text: 'Which of the following is used to create a set in Dart?', options: ['Set()', 'var set = {}', 'Set<int>()', 'All of the above'], answer: 'All of the above' },
        { id: 12, text: 'What does the await keyword do in Dart?', options: ['Pauses execution until a future is complete', 'Defines a constant', 'Creates a new variable', 'None of the above'], answer: 'Pauses execution until a future is complete' },
        { id: 13, text: 'Which of the following is used to create a map in Dart?', options: ['Map()', 'var map = {}', 'Map<int, String>()', 'All of the above'], answer: 'All of the above' },
        { id: 14, text: 'What is the purpose of the static keyword in Dart?', options: ['Defines a variable or method belonging to the class rather than an instance', 'Defines a constant', 'Defines an interface', 'None of the above'], answer: 'Defines a variable or method belonging to the class rather than an instance' },
        { id: 15, text: 'How do you define a class in Dart?', options: ['class ClassName {}', 'Class ClassName {}', 'def ClassName {}', 'None of the above'], answer: 'class ClassName {}' },
        { id: 16, text: 'What is an optional parameter in Dart?', options: ['A parameter that can be omitted', 'A parameter that must be provided', 'A parameter with a default value', 'Both A and C'], answer: 'Both A and C' },
        { id: 17, text: 'Which operator is used for null-aware access in Dart?', options: ['?.', '?.()', '??', 'Both A and B'], answer: 'Both A and B' },
        { id: 18, text: 'What is the purpose of the factory keyword in Dart?', options: ['To define a factory constructor', 'To create an instance of a class', 'To define a constant', 'None of the above'], answer: 'To define a factory constructor' },
        { id: 19, text: 'What is a mixin in Dart?', options: ['A class that can be used by multiple other classes', 'A type of function', 'A collection of variables', 'None of the above'], answer: 'A class that can be used by multiple other classes' },
        { id: 20, text: 'How do you declare a constant in Dart?', options: ['const int x = 10;', 'final int x = 10;', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 21, text: 'What is the output of print("Hello, ${5 + 3}"); in Dart?', options: ['Hello, 8', 'Hello, 5 + 3', 'Hello, 11', 'None of the above'], answer: 'Hello, 8' },
        { id: 22, text: 'What does the keyword "final" do in Dart?', options: ['Defines a variable that can only be assigned once', 'Defines a constant variable', 'Both A and B', 'None of the above'], answer: 'Defines a variable that can only be assigned once' },
        { id: 23, text: 'What is the purpose of the super keyword in Dart?', options: ['To call the superclass constructor', 'To access superclass methods', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 24, text: 'What is a Stream in Dart?', options: ['A sequence of asynchronous events', 'A way to handle synchronous operations', 'A data structure', 'None of the above'], answer: 'A sequence of asynchronous events' },
        { id: 25, text: 'How do you create an instance of a class in Dart?', options: ['var obj = new ClassName();', 'var obj = ClassName();', 'var obj = ClassName;', 'None of the above'], answer: 'var obj = ClassName();' },
        { id: 26, text: 'Which of the following is used for type-checking in Dart?', options: ['is', 'as', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 27, text: 'What does the "import" keyword do in Dart?', options: ['Includes external libraries', 'Defines a class', 'Declares a variable', 'None of the above'], answer: 'Includes external libraries' },
        { id: 28, text: 'Which of the following can be used as a constructor in Dart?', options: ['ClassName()', 'ClassName.named()', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 29, text: 'What is the purpose of the await keyword in Dart?', options: ['To pause execution until a future completes', 'To create a new variable', 'To define a constant', 'None of the above'], answer: 'To pause execution until a future completes' },
        { id: 30, text: 'What does the "new" keyword do in Dart?', options: ['Creates a new instance of a class', 'Defines a constant', 'None of the above', 'Both A and B'], answer: 'Creates a new instance of a class' },
    ], ruby: [
        { id: 1, text: 'What is Ruby?', options: ['A programming language', 'A database', 'A framework', 'None of the above'], answer: 'A programming language' },
        { id: 2, text: 'Which of the following is a valid way to define a method in Ruby?', options: ['def method_name', 'function method_name', 'method method_name', 'None of the above'], answer: 'def method_name' },
        { id: 3, text: 'What is the output of 2 + 3 in Ruby?', options: ['5', '23', 'Error', 'None of the above'], answer: '5' },
        { id: 4, text: 'How do you define a constant in Ruby?', options: ['CONSTANT_NAME = value', 'const CONSTANT_NAME = value', 'constant CONSTANT_NAME = value', 'None of the above'], answer: 'CONSTANT_NAME = value' },
        { id: 5, text: 'Which of the following is used for comments in Ruby?', options: ['// comment', '# comment', '/* comment */', 'None of the above'], answer: '# comment' },
        { id: 6, text: 'What does the ',self:' keyword refer to in Ruby?', options: ['Current object', 'Parent class', 'Module', 'None of the above'], answer: 'Current object' },
        { id: 7, text: 'Which method is used to convert a string to an integer in Ruby?', options: ['to_i', 'convert_to_integer', 'Integer', 'None of the above'], answer: 'to_i' },
        { id: 8, text: 'What is the output of puts "Hello, World!" in Ruby?', options: ['Hello, World!', 'Hello, World!', 'nil', 'None of the above'], answer: 'Hello, World!' },
        { id: 9, text: 'Which of the following is a Ruby collection type?', options: ['Array', 'Hash', 'Set', 'All of the above'], answer: 'All of the above' },
        { id: 10, text: 'How do you create a new array in Ruby?', options: ['array = []', 'array = Array.new', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 11, text: 'What is a block in Ruby?', options: ['A chunk of code', 'A method', 'A class', 'None of the above'], answer: 'A chunk of code' },
        { id: 12, text: 'How do you create a class in Ruby?', options: ['class ClassName', 'define ClassName', 'class ClassName()', 'None of the above'], answer: 'class ClassName' },
        { id: 13, text: 'What does the yield keyword do in Ruby?', options: ['Calls a block', 'Returns a value', 'Defines a constant', 'None of the above'], answer: 'Calls a block' },
        { id: 14, text: 'Which method is used to add an element to an array in Ruby?', options: ['add', 'insert', 'push', 'None of the above'], answer: 'push' },
        { id: 15, text: 'What is a module in Ruby?', options: ['A way to group methods', 'A type of class', 'A collection of constants', 'None of the above'], answer: 'A way to group methods' },
        { id: 16, text: 'Which operator is used for string interpolation in Ruby?', options: ['#{}', '%{}', '<<', 'None of the above'], answer: '#{}' },
        { id: 17, text: 'What is the purpose of the attr_accessor method in Ruby?', options: ['Creates getter and setter methods', 'Defines a constant', 'Creates an instance variable', 'None of the above'], answer: 'Creates getter and setter methods' },
        { id: 18, text: 'Which of the following is a valid hash in Ruby?', options: ['hash = {}', 'hash = Hash.new', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 19, text: 'What does the class method .new do in Ruby?', options: ['Creates a new instance of a class', 'Defines a class', 'Returns a class', 'None of the above'], answer: 'Creates a new instance of a class' },
        { id: 20, text: 'What is the purpose of the require keyword in Ruby?', options: ['To include external files', 'To define a class', 'To create a module', 'None of the above'], answer: 'To include external files' },
        { id: 21, text: 'Which of the following is an access modifier in Ruby?', options: ['public', 'private', 'protected', 'All of the above'], answer: 'All of the above' },
        { id: 22, text: 'What is the output of [1, 2, 3].map { |n| n * 2 } in Ruby?', options: ['[2, 4, 6]', '[1, 2, 3]', '[2, 3, 4]', 'None of the above'], answer: '[2, 4, 6]' },
        { id: 23, text: 'What is the purpose of the initialize method in Ruby?', options: ['To create an object', 'To define instance variables', 'To initialize an object', 'None of the above'], answer: 'To initialize an object' },
        { id: 24, text: 'How do you handle exceptions in Ruby?', options: ['begin...rescue', 'try...catch', 'throw...catch', 'None of the above'], answer: 'begin...rescue' },
        { id: 25, text: 'What is the purpose of the freeze method in Ruby?', options: ['Prevents further modifications to an object', 'Creates a new object', 'None of the above', 'Both A and B'], answer: 'Prevents further modifications to an object' },
        { id: 26, text: 'Which of the following is used to check the class of an object in Ruby?', options: ['object.class', 'object.type', 'object.is_a?', 'None of the above'], answer: 'object.class' },
        { id: 27, text: 'What is the output of 5.class in Ruby?', options: ['Integer', 'Float', 'Fixnum', 'None of the above'], answer: 'Integer' },
        { id: 28, text: 'Which method is used to remove the last element from an array in Ruby?', options: ['remove', 'pop', 'delete', 'None of the above'], answer: 'pop' },
        { id: 29, text: 'What is the purpose of the inspect method in Ruby?', options: ['Returns a string representation of an object', 'Defines a method', 'Creates a new variable', 'None of the above'], answer: 'Returns a string representation of an object' },
        { id: 30, text: 'How do you concatenate two strings in Ruby?', options: ['string1 + string2', 'string1.concat(string2)', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
    ],
    php: [
        { id: 1, text: 'What does PHP stand for?', options: ['Personal Home Page', 'PHP: Hypertext Preprocessor', 'Preprocessor Home Page', 'Private Home Page'], answer: 'PHP: Hypertext Preprocessor' },
        { id: 2, text: 'What is the correct way to end a PHP statement?', options: ['.', ';', ':', '->'], answer: ';' },
        { id: 3, text: 'Which of the following is a valid variable name in PHP?', options: ['$myVar', 'myVar$', '$my-var', '$my var'], answer: '$myVar' },
        { id: 4, text: 'What is the purpose of the `echo` statement in PHP?', options: ['To output data to the screen', 'To declare variables', 'To create functions', 'To start a session'], answer: 'To output data to the screen' },
        { id: 5, text: 'How do you create an array in PHP?', options: ['array()', '[]', 'array[]', 'All of the above'], answer: 'All of the above' },
        { id: 6, text: 'What function is used to include a file in PHP?', options: ['include()', 'require()', 'require_once()', 'All of the above'], answer: 'All of the above' },
        { id: 7, text: 'Which of the following is used to comment in PHP?', options: ['//', '#', '/*...*/', 'All of the above'], answer: 'All of the above' },
        { id: 8, text: 'What is the default port for HTTP?', options: ['80', '443', '21', '25'], answer: '80' },
        { id: 9, text: 'Which of the following functions can be used to get the length of a string in PHP?', options: ['strlen()', 'str_length()', 'count()', 'length()'], answer: 'strlen()' },
        { id: 10, text: 'How do you define a constant in PHP?', options: ['define("NAME", "value")', 'const NAME = "value"', '$NAME = "value"', 'constant NAME = "value"'], answer: 'define("NAME", "value")' },
        { id: 11, text: 'What is the purpose of the `isset()` function in PHP?', options: ['To check if a variable is set and is not NULL', 'To unset a variable', 'To check if a variable is empty', 'To check the type of a variable'], answer: 'To check if a variable is set and is not NULL' },
        { id: 12, text: 'Which PHP function is used to start a session?', options: ['session_start()', 'start_session()', 'begin_session()', 'session_init()'], answer: 'session_start()' },
        { id: 13, text: 'How do you create a class in PHP?', options: ['class ClassName { }', 'create ClassName { }', 'function ClassName { }', 'define ClassName { }'], answer: 'class ClassName { }' },
        { id: 14, text: 'What is the correct way to declare a method in a class in PHP?', options: ['function methodName() { }', 'method methodName() { }', 'public methodName() { }', 'methodName() { }'], answer: 'function methodName() { }' },
        { id: 15, text: 'What is the use of the `return` statement in a function?', options: ['To output a value from a function', 'To terminate a function', 'To start a function', 'None of the above'], answer: 'To output a value from a function' },
        { id: 16, text: 'Which of the following is used to handle exceptions in PHP?', options: ['try...catch', 'throw', 'finally', 'All of the above'], answer: 'All of the above' },
        { id: 17, text: 'How do you access the properties of an object in PHP?', options: ['object->property', 'object.property', 'object::property', 'object{property}'], answer: 'object->property' },
        { id: 18, text: 'What function is used to connect to a MySQL database in PHP?', options: ['mysql_connect()', 'mysqli_connect()', 'db_connect()', 'All of the above'], answer: 'mysqli_connect()' },
        { id: 19, text: 'What is the purpose of the `$_GET` superglobal array?', options: ['To collect form data sent with the URL', 'To store session data', 'To collect form data sent with the POST method', 'To store cookies'], answer: 'To collect form data sent with the URL' },
        { id: 20, text: 'What does the `exit()` function do in PHP?', options: ['Terminates the script', 'Ends a session', 'Closes a file', 'None of the above'], answer: 'Terminates the script' },
        { id: 21, text: 'How do you concatenate strings in PHP?', options: ['.', '+', '&', 'concat()'], answer: '.' },
        { id: 22, text: 'What is the output of `echo 5 + "5 days";`?', options: ['10', '55', '5 days', 'None of the above'], answer: '10' },
        { id: 23, text: 'How do you create a multi-dimensional array in PHP?', options: ['$array = array(array());', '$array = [[]];', '$array = new array();', 'Both A and B'], answer: 'Both A and B' },
        { id: 24, text: 'What does the `trim()` function do?', options: ['Removes whitespace from the beginning and end of a string', 'Counts the number of characters in a string', 'Replaces characters in a string', 'None of the above'], answer: 'Removes whitespace from the beginning and end of a string' },
        { id: 25, text: 'What is the purpose of the `header()` function in PHP?', options: ['To send raw HTTP headers', 'To send email', 'To create headers in a file', 'None of the above'], answer: 'To send raw HTTP headers' },
        { id: 26, text: 'Which of the following is used to escape special characters in a string?', options: ['addslashes()', 'stripslashes()', 'htmlspecialchars()', 'All of the above'], answer: 'All of the above' },
        { id: 27, text: 'How do you include a PHP file into another PHP file?', options: ['include "file.php";', 'require "file.php";', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 28, text: 'What is the use of the `foreach` loop in PHP?', options: ['To iterate over arrays', 'To iterate over objects', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 29, text: 'What is a PHP session?', options: ['A way to store information across multiple pages', 'A way to store variables', 'A temporary storage for data', 'None of the above'], answer: 'A way to store information across multiple pages' },
        { id: 30, text: 'What is the output of the following PHP code: `echo 10 == "10";`?', options: ['1', 'true', '1 and true', '10'], answer: '1' },
    ],
    Node: [
        { id: 1, text: 'What is Node.js?', options: ['A JavaScript runtime built on Chrome\'s V8 engine', 'A JavaScript framework', 'A CSS library', 'A database system'], answer: 'A JavaScript runtime built on Chrome\'s V8 engine' },
        { id: 2, text: 'Which of the following is a core module in Node.js?', options: ['fs', 'http', 'path', 'All of the above'], answer: 'All of the above' },
        { id: 3, text: 'What is the purpose of the `package.json` file?', options: ['To manage project dependencies', 'To define project metadata', 'To configure scripts', 'All of the above'], answer: 'All of the above' },
        { id: 4, text: 'How do you install a package in Node.js?', options: ['npm install package-name', 'node install package-name', 'npm get package-name', 'install package-name'], answer: 'npm install package-name' },
        { id: 5, text: 'What does the `require()` function do in Node.js?', options: ['Imports modules', 'Exports modules', 'Runs scripts', 'None of the above'], answer: 'Imports modules' },
        { id: 6, text: 'Which command starts a Node.js application?', options: ['node app.js', 'start app.js', 'run app.js', 'npm run app.js'], answer: 'node app.js' },
        { id: 7, text: 'What is middleware in Express.js?', options: ['Functions that have access to the request and response objects', 'Static files', 'Database connections', 'None of the above'], answer: 'Functions that have access to the request and response objects' },
        { id: 8, text: 'What is the default port for a Node.js server?', options: ['8080', '3000', '80', '5000'], answer: '3000' },
        { id: 9, text: 'What is the use of the `next()` function in Express.js?', options: ['To pass control to the next middleware function', 'To end the request-response cycle', 'To handle errors', 'None of the above'], answer: 'To pass control to the next middleware function' },
        { id: 10, text: 'Which of the following is used for asynchronous operations in Node.js?', options: ['Callbacks', 'Promises', 'Async/Await', 'All of the above'], answer: 'All of the above' },
        { id: 11, text: 'What does `npm` stand for?', options: ['Node Package Manager', 'Node Project Manager', 'Node Plugin Manager', 'None of the above'], answer: 'Node Package Manager' },
        { id: 12, text: 'How do you create a simple HTTP server in Node.js?', options: ['http.createServer()', 'http.Server()', 'new http.Server()', 'http.startServer()'], answer: 'http.createServer()' },
        { id: 13, text: 'What is the purpose of the `process` object in Node.js?', options: ['Provides information about the current Node.js process', 'Handles file system operations', 'Manages HTTP requests', 'None of the above'], answer: 'Provides information about the current Node.js process' },
        { id: 14, text: 'Which method is used to read files asynchronously in Node.js?', options: ['fs.readFile()', 'fs.read()', 'fs.open()', 'fs.fileRead()'], answer: 'fs.readFile()' },
        { id: 15, text: 'What is the purpose of the `exports` object in Node.js?', options: ['To export functions and variables from a module', 'To import modules', 'To handle errors', 'None of the above'], answer: 'To export functions and variables from a module' },
        { id: 16, text: 'Which of the following is a popular framework built on Node.js?', options: ['Express.js', 'Django', 'Flask', 'Ruby on Rails'], answer: 'Express.js' },
        { id: 17, text: 'What does the `app.listen()` method do in Express.js?', options: ['Starts the server', 'Sets up middleware', 'Routes requests', 'None of the above'], answer: 'Starts the server' },
        { id: 18, text: 'What is the use of `async` keyword in Node.js?', options: ['To define asynchronous functions', 'To define synchronous functions', 'To handle promises', 'None of the above'], answer: 'To define asynchronous functions' },
        { id: 19, text: 'Which method is used to handle HTTP GET requests in Express.js?', options: ['app.get()', 'app.post()', 'app.request()', 'app.handle()'], answer: 'app.get()' },
        { id: 20, text: 'What is the `body-parser` middleware used for?', options: ['To parse incoming request bodies', 'To manage cookies', 'To handle sessions', 'None of the above'], answer: 'To parse incoming request bodies' },
        { id: 21, text: 'What is the purpose of the `await` keyword in Node.js?', options: ['To wait for a promise to resolve', 'To pause the execution of the function', 'To run synchronous code', 'None of the above'], answer: 'To wait for a promise to resolve' },
        { id: 22, text: 'What is the main purpose of the `dotenv` package?', options: ['To manage environment variables', 'To handle configuration files', 'To read files', 'None of the above'], answer: 'To manage environment variables' },
        { id: 23, text: 'How do you handle errors in Node.js?', options: ['Using try-catch blocks', 'Using callback functions', 'Using promises', 'All of the above'], answer: 'All of the above' },
        { id: 24, text: 'What is the `fs` module used for in Node.js?', options: ['File system operations', 'Network operations', 'HTTP requests', 'None of the above'], answer: 'File system operations' },
        { id: 25, text: 'How do you serve static files in Express.js?', options: ['app.use(express.static())', 'app.static()', 'app.useStatic()', 'serve.static()'], answer: 'app.use(express.static())' },
        { id: 26, text: 'What is the `Buffer` class used for in Node.js?', options: ['To handle binary data', 'To manage memory', 'To process streams', 'None of the above'], answer: 'To handle binary data' },
        { id: 27, text: 'How can you read a JSON file in Node.js?', options: ['fs.readFileSync()', 'JSON.parse()', 'fs.readFile()', 'All of the above'], answer: 'All of the above' },
        { id: 28, text: 'What does the `npm start` command do?', options: ['Starts the application', 'Installs dependencies', 'Builds the application', 'None of the above'], answer: 'Starts the application' },
        { id: 29, text: 'What is the purpose of the `cluster` module in Node.js?', options: ['To create multiple child processes', 'To manage database connections', 'To handle HTTP requests', 'None of the above'], answer: 'To create multiple child processes' },
        { id: 30, text: 'How can you debug a Node.js application?', options: ['Using console.log()', 'Using the Node.js debugger', 'Using an IDE', 'All of the above'], answer: 'All of the above' },
    ],
    Express: [
        { id: 1, text: 'What is Express.js?', options: ['A web application framework for Node.js', 'A database management system', 'A front-end library', 'A CSS framework'], answer: 'A web application framework for Node.js' },
        { id: 2, text: 'Which of the following is true about Express.js?', options: ['It is built on top of Node.js', 'It is a full-stack framework', 'It requires jQuery to function', 'It is only used for APIs'], answer: 'It is built on top of Node.js' },
        { id: 3, text: 'How do you install Express.js?', options: ['npm install express', 'npm install expressjs', 'npm install express-framework', 'npm add express'], answer: 'npm install express' },
        { id: 4, text: 'What is the purpose of the `app.use()` method in Express.js?', options: ['To mount middleware', 'To define routes', 'To create an instance of the application', 'None of the above'], answer: 'To mount middleware' },
        { id: 5, text: 'How do you define a GET route in Express.js?', options: ['app.get(path, callback)', 'app.route(path).get(callback)', 'app.route(path).get()', 'app.GET(path, callback)'], answer: 'app.get(path, callback)' },
        { id: 6, text: 'What is middleware in Express.js?', options: ['Functions that have access to request and response objects', 'Static files', 'Database connections', 'None of the above'], answer: 'Functions that have access to request and response objects' },
        { id: 7, text: 'Which method is used to serve static files in Express.js?', options: ['express.static()', 'app.static()', 'serve.static()', 'static()'], answer: 'express.static()' },
        { id: 8, text: 'How do you handle errors in Express.js?', options: ['Using error-handling middleware', 'Using try-catch blocks', 'Using console.log()', 'All of the above'], answer: 'Using error-handling middleware' },
        { id: 9, text: 'What is the default port for an Express.js application?', options: ['3000', '8000', '5000', '8080'], answer: '3000' },
        { id: 10, text: 'How can you parse JSON request bodies in Express.js?', options: ['app.use(express.json())', 'app.json()', 'app.bodyParser()', 'express.bodyParser()'], answer: 'app.use(express.json())' },
        { id: 11, text: 'What does the `next()` function do in Express.js?', options: ['Passes control to the next middleware function', 'Ends the response', 'Starts a new request', 'None of the above'], answer: 'Passes control to the next middleware function' },
        { id: 12, text: 'How can you define a POST route in Express.js?', options: ['app.post(path, callback)', 'app.route(path).post(callback)', 'app.POST(path, callback)', 'None of the above'], answer: 'app.post(path, callback)' },
        { id: 13, text: 'What is the purpose of the `body-parser` middleware?', options: ['To parse incoming request bodies', 'To handle static files', 'To manage sessions', 'None of the above'], answer: 'To parse incoming request bodies' },
        { id: 14, text: 'Which of the following is a valid way to start an Express.js server?', options: ['app.listen(port)', 'app.start(port)', 'app.run(port)', 'server.listen(port)'], answer: 'app.listen(port)' },
        { id: 15, text: 'What is the purpose of the `Router` class in Express.js?', options: ['To create modular route handlers', 'To manage middleware', 'To handle errors', 'None of the above'], answer: 'To create modular route handlers' },
        { id: 16, text: 'How do you handle query parameters in Express.js?', options: ['req.query', 'req.params', 'req.body', 'req.get'], answer: 'req.query' },
        { id: 17, text: 'Which HTTP method is used to update resources?', options: ['PUT', 'GET', 'DELETE', 'POST'], answer: 'PUT' },
        { id: 18, text: 'What is the purpose of the `express-session` middleware?', options: ['To manage user sessions', 'To parse cookies', 'To handle authentication', 'None of the above'], answer: 'To manage user sessions' },
        { id: 19, text: 'Which of the following is NOT a valid response method in Express.js?', options: ['res.send()', 'res.json()', 'res.status()', 'res.data()'], answer: 'res.data()' },
        { id: 20, text: 'What is the purpose of the `res.sendFile()` method?', options: ['To send a file as a response', 'To read a file from the server', 'To create a new file', 'None of the above'], answer: 'To send a file as a response' },
        { id: 21, text: 'How can you enable CORS in an Express.js application?', options: ['Using the cors middleware', 'By setting headers manually', 'Both A and B', 'None of the above'], answer: 'Both A and B' },
        { id: 22, text: 'What is the function of the `res.redirect()` method?', options: ['To redirect to a different URL', 'To send a 404 response', 'To send JSON data', 'None of the above'], answer: 'To redirect to a different URL' },
        { id: 23, text: 'Which method is used to handle HTTP DELETE requests in Express.js?', options: ['app.delete(path, callback)', 'app.remove(path, callback)', 'app.del(path, callback)', 'None of the above'], answer: 'app.delete(path, callback)' },
        { id: 24, text: 'What does the `app.param()` method do?', options: ['Defines middleware for specific route parameters', 'Handles query parameters', 'Manages body parameters', 'None of the above'], answer: 'Defines middleware for specific route parameters' },
        { id: 25, text: 'How do you enable gzip compression in Express.js?', options: ['Using the compression middleware', 'By setting headers manually', 'Using the gzip middleware', 'None of the above'], answer: 'Using the compression middleware' },
        { id: 26, text: 'What is the purpose of the `res.locals` object?', options: ['To pass data to the view template', 'To store session data', 'To handle cookies', 'None of the above'], answer: 'To pass data to the view template' },
        { id: 27, text: 'How do you handle file uploads in Express.js?', options: ['Using multer middleware', 'Using body-parser', 'Using express-fileupload', 'Both A and C'], answer: 'Both A and C' },
        { id: 28, text: 'What is the function of the `res.status()` method?', options: ['Sets the HTTP status code', 'Sends a response', 'Handles errors', 'None of the above'], answer: 'Sets the HTTP status code' },
        { id: 29, text: 'How can you define a route with URL parameters in Express.js?', options: ['app.get("/user/:id", callback)', 'app.get("/user/id", callback)', 'app.route("/user/:id")', 'None of the above'], answer: 'app.get("/user/:id", callback)' },
        { id: 30, text: 'Which of the following is true about the `app.all()` method?', options: ['It handles all HTTP methods for a specific route', 'It is used to create a new route', 'It is only used for POST requests', 'None of the above'], answer: 'It handles all HTTP methods for a specific route' },
    ],
    RUST: [
        { id: 1, text: 'What is Rust?', options: ['A systems programming language', 'A web framework', 'A database', 'A scripting language'], answer: 'A systems programming language' },
        { id: 2, text: 'Which of the following is a key feature of Rust?', options: ['Memory safety without garbage collection', 'Automatic memory management', 'Reference counting', 'Dynamic typing'], answer: 'Memory safety without garbage collection' },
        { id: 3, text: 'How do you declare a variable in Rust?', options: ['let x = 5;', 'var x = 5;', 'const x = 5;', 'x := 5;'], answer: 'let x = 5;' },
        { id: 4, text: 'What is the purpose of the `mut` keyword in Rust?', options: ['To declare a mutable variable', 'To declare a constant', 'To define a function', 'To create an array'], answer: 'To declare a mutable variable' },
        { id: 5, text: 'What does the `match` statement do in Rust?', options: ['Pattern matching', 'Error handling', 'Variable declaration', 'Function definition'], answer: 'Pattern matching' },
        { id: 6, text: 'How do you create a new vector in Rust?', options: ['let v = vec![1, 2, 3];', 'let v = new Vec![1, 2, 3];', 'let v = vec(1, 2, 3);', 'let v = Vec::new();'], answer: 'let v = vec![1, 2, 3];' },
        { id: 7, text: 'Which of the following is NOT a primitive type in Rust?', options: ['String', 'u32', 'bool', 'char'], answer: 'String' },
        { id: 8, text: 'What is a trait in Rust?', options: ['A way to define shared behavior', 'A data structure', 'A function', 'A type of variable'], answer: 'A way to define shared behavior' },
        { id: 9, text: 'How do you handle errors in Rust?', options: ['Using Result and Option types', 'Using exceptions', 'Using error codes', 'None of the above'], answer: 'Using Result and Option types' },
        { id: 10, text: 'What is the purpose of the `unsafe` keyword in Rust?', options: ['To allow operations that can potentially violate safety guarantees', 'To create mutable references', 'To declare a constant', 'To define a function'], answer: 'To allow operations that can potentially violate safety guarantees' },
        { id: 11, text: 'Which macro is used for printing in Rust?', options: ['println!', 'print!', 'echo!', 'log!'], answer: 'println!' },
        { id: 12, text: 'How do you define a function in Rust?', options: ['fn my_function() { }', 'function my_function() { }', 'def my_function() { }', 'func my_function() { }'], answer: 'fn my_function() { }' },
        { id: 13, text: 'What is ownership in Rust?', options: ['A way to manage memory', 'A type of variable', 'A trait', 'A function'], answer: 'A way to manage memory' },
        { id: 14, text: 'How do you create a struct in Rust?', options: ['struct MyStruct { field: i32 }', 'MyStruct { field: i32 }', 'create struct MyStruct { field: i32 }', 'define struct MyStruct { field: i32 }'], answer: 'struct MyStruct { field: i32 }' },
        { id: 15, text: 'What does `let` do in Rust?', options: ['Declares a variable', 'Defines a function', 'Creates a struct', 'Implements a trait'], answer: 'Declares a variable' },
        { id: 16, text: 'How do you perform pattern matching on a tuple in Rust?', options: ['let (x, y) = my_tuple;', 'match my_tuple { (x, y) => { } }', 'let tuple = (x, y);', 'None of the above'], answer: 'let (x, y) = my_tuple;' },
        { id: 17, text: 'What is a closure in Rust?', options: ['An anonymous function', 'A mutable variable', 'A type of loop', 'None of the above'], answer: 'An anonymous function' },
        { id: 18, text: 'Which keyword is used to define an enum in Rust?', options: ['enum', 'def', 'struct', 'type'], answer: 'enum' },
        { id: 19, text: 'What is the purpose of the `impl` keyword in Rust?', options: ['To define implementations for a type', 'To declare a constant', 'To create a struct', 'To manage ownership'], answer: 'To define implementations for a type' },
        { id: 20, text: 'How do you convert a String to a &str in Rust?', options: ['my_string.as_str()', 'my_string.to_str()', 'my_string.to_string()', 'my_string.str()'], answer: 'my_string.as_str()' },
        { id: 21, text: 'What does the `?` operator do in Rust?', options: ['Error propagation', 'Variable declaration', 'Type conversion', 'None of the above'], answer: 'Error propagation' },
        { id: 22, text: 'How do you create a new thread in Rust?', options: ['thread::spawn(|| { })', 'spawn thread { }', 'new thread { }', 'create thread { }'], answer: 'thread::spawn(|| { })' },
        { id: 23, text: 'Which of the following is a valid Rust comment?', options: ['// This is a comment', '# This is a comment', '/* This is a comment */', 'Both A and C'], answer: 'Both A and C' },
        { id: 24, text: 'How do you create an iterator in Rust?', options: ['my_vec.iter()', 'iter(my_vec)', 'my_vec.iterator()', 'None of the above'], answer: 'my_vec.iter()' },
        { id: 25, text: 'What is the purpose of the `#[derive()]` attribute in Rust?', options: ['To automatically implement traits for a type', 'To create a struct', 'To define a function', 'None of the above'], answer: 'To automatically implement traits for a type' },
        { id: 26, text: 'How do you define a constant in Rust?', options: ['const MY_CONST: i32 = 10;', 'let MY_CONST = 10;', 'const MY_CONST = 10;', 'None of the above'], answer: 'const MY_CONST: i32 = 10;' },
        { id: 27, text: 'What does the `for` loop do in Rust?', options: ['Iterates over a collection', 'Defines a function', 'Declares a variable', 'None of the above'], answer: 'Iterates over a collection' },
        { id: 28, text: 'How do you handle optional values in Rust?', options: ['Using Option type', 'Using Result type', 'Using nullable types', 'None of the above'], answer: 'Using Option type' },
        { id: 29, text: 'What is a reference in Rust?', options: ['A borrowed pointer', 'A mutable variable', 'A constant', 'None of the above'], answer: 'A borrowed pointer' },
        { id: 30, text: 'How do you create a new HashMap in Rust?', options: ['let mut map = HashMap::new();', 'let map = new HashMap();', 'let map = HashMap();', 'let map = HashMap::create();'], answer: 'let mut map = HashMap::new();' },
    ],
    
    
        
    
    
        
    

};
export default Questions;
